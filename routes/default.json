{
	"defines": {
		"constants": {
			"name": "Octane",
			"description": "A Node.JS module which provide an object oriented wrapper for the HPE ALM Octane API",
			"protocol": "https",
			"host": "",
			"port": "443"
		},
		"params": {
			"text_search": {
				"type": "string",
				"required": false,
				"description": "elastic search"
			},
			"limit": {
				"type": "integer",
				"required": false,
				"description": "The number of instances to return in each page from the results of the query."
			},
			"offset": {
				"type": "integer",
				"required": false,
				"description": "The first position to return from the results of the query. The default is 0."
			},
			"fields": {
				"type": "string",
				"required": false,
				"description": "The fields to be returned in the results of the query."
			},
			"order_by": {
				"type": "string",
				"required": false,
				"description": "Sorts the entities returned in the results of the query."
			},
			"query": {
				"type": "query",
				"required": false,
				"description": "Filter entities returned in the results of the query."
			},
			"id": {
				"type": "integer",
				"required": true,
				"description": "The id."
			}
		}
	},
	"metadata": {
		"get-entities": {
			"url": "/metadata/entities",
			"method": "GET",
			"params": {
				"$query": null
			},
			"description": "Gets entities list"
		},
		"get-fields": {
			"url": "/metadata/fields",
			"method": "GET",
			"params": {
				"$query": null
			},
			"description": "Get fields list"
		}
	},
	"severities": {
		"get-all": {
			"url": "/list_nodes?query=\"list_root EQ {name EQ ^Severity^}\"&order_by=id",
			"method": "GET",
			"params": {},
			"description": "Gets severities list"
		}
	},
	"priorities": {
		"get-all": {
			"url": "/list_nodes?query=\"list_root EQ {name EQ ^Priority^}\"&order_by=id",
			"method": "GET",
			"params": {},
			"description": "Gets priorities list"
		}
	},
	"attachments": {
		"create": {
			"url": "/attachments",
			"method": "POST",
			"content-type": "multipart/form-data",
			"params": {
				"owner_release": {
					"type": "reference",
					"required": false,
					"description": "Owner release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"owner_work_item": {
					"type": "reference",
					"required": false,
					"description": "Owner work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "theme"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"owner_test": {
					"type": "reference",
					"required": false,
					"description": "Owner test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"description": {
					"type": "string",
					"required": false,
					"description": "Description",
					"max_length": 2000
				},
				"owner_milestone": {
					"type": "reference",
					"required": false,
					"description": "Owner milestone",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "milestone"
							}
						]
					}
				},
				"file": {
					"type": "file",
					"required": true,
					"description": "The absolute file path"
				}
			},
			"description": "Create a single attachment."
		},
		"download": {
			"url": "/attachments/:id",
			"method": "GET",
			"accept": "application/octet-stream",
			"params": {
				"$id": null
			},
			"description": "Downloads a single attachment."
		},
		"get-all": {
			"url": "/attachments",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets attachments list."
		},
		"get": {
			"url": "/attachments/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single attachment."
		},
		"update": {
			"url": "/attachments/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"description": {
					"type": "string",
					"required": false,
					"description": "Description",
					"max_length": 2000
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment_notification_item"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single attachment."
		},
		"delete": {
			"url": "/attachments/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single attachment."
		}
	},
	"user items": {
		"get-all": {
			"url": "/user_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets user items list."
		},
		"get": {
			"url": "/user_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single user item."
		},
		"create": {
			"url": "/user_items",
			"method": "POST",
			"params": {
				"reason": {
					"type": "string",
					"required": false,
					"description": "Reason",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"origin": {
					"type": "integer",
					"required": false,
					"description": "Origin",
					"min_value": 0,
					"max_value": 2
				},
				"my_follow_items_task": {
					"type": "reference",
					"required": false,
					"description": "My follow items task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"my_follow_items_run": {
					"type": "reference",
					"required": false,
					"description": "My follow items run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_manual"
							}
						]
					}
				},
				"my_follow_items_requirement": {
					"type": "reference",
					"required": false,
					"description": "My follow items requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"my_follow_items_work_item": {
					"type": "reference",
					"required": false,
					"description": "My follow items work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"user": {
					"type": "reference",
					"required": false,
					"description": "User",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"my_follow_items_test": {
					"type": "reference",
					"required": false,
					"description": "My follow items test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							}
						]
					}
				}
			},
			"description": "Create a single user item."
		},
		"update": {
			"url": "/user_items/:id",
			"method": "PUT",
			"params": {
				"reason": {
					"type": "string",
					"required": false,
					"description": "Reason",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"origin": {
					"type": "integer",
					"required": false,
					"description": "Origin",
					"min_value": 0,
					"max_value": 2
				},
				"my_follow_items_task": {
					"type": "reference",
					"required": false,
					"description": "My follow items task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"my_follow_items_run": {
					"type": "reference",
					"required": false,
					"description": "My follow items run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_manual"
							}
						]
					}
				},
				"my_follow_items_requirement": {
					"type": "reference",
					"required": false,
					"description": "My follow items requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"my_follow_items_work_item": {
					"type": "reference",
					"required": false,
					"description": "My follow items work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"user": {
					"type": "reference",
					"required": false,
					"description": "User",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"my_follow_items_test": {
					"type": "reference",
					"required": false,
					"description": "My follow items test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single user item."
		},
		"delete": {
			"url": "/user_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single user item."
		}
	},
	"scm resources": {
		"get-all": {
			"url": "/scm_resources",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm resources list."
		},
		"get": {
			"url": "/scm_resources/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm resource."
		},
		"create": {
			"url": "/scm_resources",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"link_to_test": {
					"type": "reference",
					"required": false,
					"description": "Link to test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_folder"
							},
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"scm_repository": {
					"type": "reference",
					"required": true,
					"description": "Scm repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"relative_path": {
					"type": "string",
					"required": true,
					"description": "Relative path",
					"max_length": 260
				}
			},
			"description": "Create a single scm resource."
		},
		"update": {
			"url": "/scm_resources/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"link_to_test": {
					"type": "reference",
					"required": false,
					"description": "Link to test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_folder"
							},
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"scm_repository": {
					"type": "reference",
					"required": false,
					"description": "Scm repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"relative_path": {
					"type": "string",
					"required": false,
					"description": "Relative path",
					"max_length": 260
				},
				"$id": null
			},
			"description": "Update a single scm resource."
		},
		"delete": {
			"url": "/scm_resources/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm resource."
		}
	},
	"pipeline runs": {
		"get-all": {
			"url": "/pipeline_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipeline runs list."
		},
		"get": {
			"url": "/pipeline_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline run."
		},
		"create": {
			"url": "/pipeline_runs",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"not_me_user": {
					"type": "reference",
					"required": false,
					"description": "Not me user",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"participating_ci_builds": {
					"type": "object",
					"required": false,
					"description": "Participating ci builds"
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"runs": {
					"type": "reference",
					"required": false,
					"description": "Runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				}
			},
			"description": "Create a single pipeline run."
		},
		"update": {
			"url": "/pipeline_runs/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"not_me_user": {
					"type": "reference",
					"required": false,
					"description": "Not me user",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"participating_ci_builds": {
					"type": "object",
					"required": false,
					"description": "Participating ci builds"
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"runs": {
					"type": "reference",
					"required": false,
					"description": "Runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single pipeline run."
		},
		"delete": {
			"url": "/pipeline_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single pipeline run."
		}
	},
	"work item roots": {
		"get-all": {
			"url": "/work_item_roots",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets work item roots list."
		},
		"get": {
			"url": "/work_item_roots/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single work item root."
		},
		"create": {
			"url": "/work_item_roots",
			"method": "POST",
			"params": {
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single work item root."
		},
		"update": {
			"url": "/work_item_roots/:id",
			"method": "PUT",
			"params": {
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single work item root."
		},
		"delete": {
			"url": "/work_item_roots/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single work item root."
		}
	},
	"team sprints": {
		"get-all": {
			"url": "/team_sprints",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets team sprints list."
		},
		"get": {
			"url": "/team_sprints/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single team sprint."
		},
		"create": {
			"url": "/team_sprints",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"to_improve": {
					"type": "memo",
					"required": false,
					"description": "To improve"
				},
				"team_member_team_sprints": {
					"type": "reference",
					"required": false,
					"description": "Team member team sprints",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team_member_team_sprint"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": true,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": true,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"expected_velocity": {
					"type": "integer",
					"required": false,
					"description": "Expected velocity",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"to_preserve": {
					"type": "memo",
					"required": false,
					"description": "What went well"
				}
			},
			"description": "Create a single team sprint."
		},
		"update": {
			"url": "/team_sprints/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"to_improve": {
					"type": "memo",
					"required": false,
					"description": "To improve"
				},
				"expected_velocity": {
					"type": "integer",
					"required": false,
					"description": "Expected velocity",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"to_preserve": {
					"type": "memo",
					"required": false,
					"description": "What went well"
				},
				"$id": null
			},
			"description": "Update a single team sprint."
		},
		"delete": {
			"url": "/team_sprints/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single team sprint."
		}
	},
	"user roles": {
		"get-all": {
			"url": "/user_roles",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets user roles list."
		},
		"get": {
			"url": "/user_roles/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single user role."
		}
	},
	"favorites": {
		"get-all": {
			"url": "/favorites",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets favorites list."
		},
		"get": {
			"url": "/favorites/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single favorite."
		},
		"create": {
			"url": "/favorites",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"params": {
					"type": "object",
					"required": false,
					"description": "Params"
				},
				"pinned_by": {
					"type": "reference",
					"required": false,
					"description": "Pinned by",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"state_name": {
					"type": "string",
					"required": false,
					"description": "State name",
					"max_length": 255
				},
				"is_shared": {
					"type": "boolean",
					"required": false,
					"description": "Is shared"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"module_root_state": {
					"type": "string",
					"required": false,
					"description": "Module root state",
					"max_length": 255
				}
			},
			"description": "Create a single favorite."
		},
		"update": {
			"url": "/favorites/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"params": {
					"type": "object",
					"required": false,
					"description": "Params"
				},
				"pinned_by": {
					"type": "reference",
					"required": false,
					"description": "Pinned by",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"state_name": {
					"type": "string",
					"required": false,
					"description": "State name",
					"max_length": 255
				},
				"is_shared": {
					"type": "boolean",
					"required": false,
					"description": "Is shared"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"module_root_state": {
					"type": "string",
					"required": false,
					"description": "Module root state",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single favorite."
		},
		"delete": {
			"url": "/favorites/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single favorite."
		}
	},
	"ci builds": {
		"get-all": {
			"url": "/ci_builds",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets ci builds list."
		},
		"get": {
			"url": "/ci_builds/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single ci build."
		},
		"create": {
			"url": "/ci_builds",
			"method": "POST",
			"params": {
				"build_fail_classification": {
					"type": "reference",
					"required": false,
					"description": "Build failure classification",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"scm_summary": {
					"type": "object",
					"required": false,
					"description": "Scm summary"
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"predict_failure_class": {
					"type": "reference",
					"required": false,
					"description": "Predict failure class",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single ci build."
		},
		"update": {
			"url": "/ci_builds/:id",
			"method": "PUT",
			"params": {
				"build_fail_classification": {
					"type": "reference",
					"required": false,
					"description": "Build failure classification",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"scm_summary": {
					"type": "object",
					"required": false,
					"description": "Scm summary"
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"predict_failure_class": {
					"type": "reference",
					"required": false,
					"description": "Predict failure class",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single ci build."
		},
		"delete": {
			"url": "/ci_builds/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single ci build."
		}
	},
	"test versions": {
		"get-all": {
			"url": "/test_versions",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test versions list."
		},
		"get": {
			"url": "/test_versions/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test version."
		},
		"update": {
			"url": "/test_versions/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"releases": {
					"type": "reference",
					"required": false,
					"description": "Releases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test version."
		}
	},
	"field metadata date times": {
		"get-all": {
			"url": "/date_time_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata date times list."
		},
		"get": {
			"url": "/date_time_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata date time."
		},
		"create": {
			"url": "/date_time_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata date time."
		},
		"update": {
			"url": "/date_time_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata date time."
		}
	},
	"phases": {
		"get-all": {
			"url": "/phases",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets phases list."
		},
		"get": {
			"url": "/phases/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single phase."
		},
		"create": {
			"url": "/phases",
			"method": "POST",
			"params": {
				"master_phase": {
					"type": "reference",
					"required": false,
					"description": "Master phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"transitions_to_trgt_phs": {
					"type": "reference",
					"required": false,
					"description": "Transitions to trgt phs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "transition"
							}
						]
					}
				},
				"is_start_phase": {
					"type": "boolean",
					"required": false,
					"description": "Is start phase"
				},
				"is_hidden": {
					"type": "boolean",
					"required": false,
					"description": "Is hidden"
				},
				"description": {
					"type": "string",
					"required": false,
					"description": "Description",
					"max_length": 255
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"sub_phases": {
					"type": "reference",
					"required": false,
					"description": "Sub phases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"business_rule_to_phase": {
					"type": "reference",
					"required": false,
					"description": "Business rule to phase",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"color_hex": {
					"type": "string",
					"required": false,
					"description": "Color hex",
					"max_length": 16
				},
				"wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "wip_limit"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 4000
				},
				"transitions_to_src_phs": {
					"type": "reference",
					"required": false,
					"description": "Transitions to src phs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "transition"
							}
						]
					}
				},
				"metaphase": {
					"type": "reference",
					"required": false,
					"description": "Metaphase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "metaphase"
							}
						]
					}
				},
				"entity": {
					"type": "string",
					"required": true,
					"description": "Entity",
					"max_length": 255
				}
			},
			"description": "Create a single phase."
		},
		"update": {
			"url": "/phases/:id",
			"method": "PUT",
			"params": {
				"transitions_to_trgt_phs": {
					"type": "reference",
					"required": false,
					"description": "Transitions to trgt phs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "transition"
							}
						]
					}
				},
				"is_start_phase": {
					"type": "boolean",
					"required": false,
					"description": "Is start phase"
				},
				"is_hidden": {
					"type": "boolean",
					"required": false,
					"description": "Is hidden"
				},
				"description": {
					"type": "string",
					"required": false,
					"description": "Description",
					"max_length": 255
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"business_rule_to_phase": {
					"type": "reference",
					"required": false,
					"description": "Business rule to phase",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "wip_limit"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 4000
				},
				"transitions_to_src_phs": {
					"type": "reference",
					"required": false,
					"description": "Transitions to src phs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "transition"
							}
						]
					}
				},
				"metaphase": {
					"type": "reference",
					"required": false,
					"description": "Metaphase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "metaphase"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single phase."
		}
	},
	"scm repositories": {
		"get-all": {
			"url": "/scm_repositories",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm repositories list."
		},
		"get": {
			"url": "/scm_repositories/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm repository."
		},
		"create": {
			"url": "/scm_repositories",
			"method": "POST",
			"params": {
				"test_automated": {
					"type": "reference",
					"required": false,
					"description": "Test automated",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"scm_resource_file": {
					"type": "reference",
					"required": false,
					"description": "Scm resource file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"scm_source_view": {
					"type": "string",
					"required": false,
					"description": "File link template",
					"max_length": 255
				},
				"code_base": {
					"type": "reference",
					"required": false,
					"description": "Code base",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "code_base"
							}
						]
					}
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "Url",
					"max_length": 255
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"scm_diff": {
					"type": "string",
					"required": false,
					"description": "Diff link template",
					"max_length": 255
				},
				"scm_type": {
					"type": "integer",
					"required": false,
					"description": "Type",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single scm repository."
		},
		"update": {
			"url": "/scm_repositories/:id",
			"method": "PUT",
			"params": {
				"test_automated": {
					"type": "reference",
					"required": false,
					"description": "Test automated",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"scm_resource_file": {
					"type": "reference",
					"required": false,
					"description": "Scm resource file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"scm_source_view": {
					"type": "string",
					"required": false,
					"description": "File link template",
					"max_length": 255
				},
				"code_base": {
					"type": "reference",
					"required": false,
					"description": "Code base",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "code_base"
							}
						]
					}
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "Url",
					"max_length": 255
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"scm_diff": {
					"type": "string",
					"required": false,
					"description": "Diff link template",
					"max_length": 255
				},
				"scm_type": {
					"type": "integer",
					"required": false,
					"description": "Type",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single scm repository."
		},
		"delete": {
			"url": "/scm_repositories/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm repository."
		}
	},
	"tasks": {
		"get-all": {
			"url": "/tasks",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets tasks list."
		},
		"get": {
			"url": "/tasks/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single task."
		},
		"create": {
			"url": "/tasks",
			"method": "POST",
			"params": {
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"item_type": {
					"type": "reference",
					"required": false,
					"description": "Type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.task_item_type",
								"type": "list_node"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"invested_hours": {
					"type": "integer",
					"required": false,
					"description": "Invested hours",
					"min_value": 0,
					"max_value": 1000
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"remaining_hours": {
					"type": "integer",
					"required": false,
					"description": "Remaining hours",
					"min_value": 0,
					"max_value": 1000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"estimated_hours": {
					"type": "integer",
					"required": false,
					"description": "Estimated hours",
					"min_value": 0,
					"max_value": 1000
				},
				"story": {
					"type": "reference",
					"required": true,
					"description": "Story",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				}
			},
			"description": "Create a single task."
		},
		"update": {
			"url": "/tasks/:id",
			"method": "PUT",
			"params": {
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"item_type": {
					"type": "reference",
					"required": false,
					"description": "Type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.task_item_type",
								"type": "list_node"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"invested_hours": {
					"type": "integer",
					"required": false,
					"description": "Invested hours",
					"min_value": 0,
					"max_value": 1000
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"remaining_hours": {
					"type": "integer",
					"required": false,
					"description": "Remaining hours",
					"min_value": 0,
					"max_value": 1000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"estimated_hours": {
					"type": "integer",
					"required": false,
					"description": "Estimated hours",
					"min_value": 0,
					"max_value": 1000
				},
				"story": {
					"type": "reference",
					"required": false,
					"description": "Story",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single task."
		},
		"delete": {
			"url": "/tasks/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single task."
		}
	},
	"collaboration tools": {
		"get-all": {
			"url": "/collaboration_tools",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets collaboration tools list."
		},
		"get": {
			"url": "/collaboration_tools/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single collaboration tool."
		},
		"create": {
			"url": "/collaboration_tools",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"publish_octane_data": {
					"type": "boolean",
					"required": true,
					"description": "Publish octane data"
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"team_domain": {
					"type": "string",
					"required": true,
					"description": "Team domain",
					"max_length": 255
				},
				"team_id": {
					"type": "string",
					"required": true,
					"description": "Team id",
					"max_length": 255
				},
				"team_name": {
					"type": "string",
					"required": true,
					"description": "Team name",
					"max_length": 255
				}
			},
			"description": "Create a single collaboration tool."
		},
		"update": {
			"url": "/collaboration_tools/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"publish_octane_data": {
					"type": "boolean",
					"required": false,
					"description": "Publish octane data"
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"team_domain": {
					"type": "string",
					"required": false,
					"description": "Team domain",
					"max_length": 255
				},
				"team_id": {
					"type": "string",
					"required": false,
					"description": "Team id",
					"max_length": 255
				},
				"team_name": {
					"type": "string",
					"required": false,
					"description": "Team name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single collaboration tool."
		},
		"delete": {
			"url": "/collaboration_tools/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single collaboration tool."
		}
	},
	"pipelines": {
		"get-all": {
			"url": "/pipelines",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipelines list."
		},
		"get": {
			"url": "/pipelines/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline."
		},
		"create": {
			"url": "/pipelines",
			"method": "POST",
			"params": {
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"notification_track_tester": {
					"type": "boolean",
					"required": false,
					"description": "Notification track tester"
				},
				"assign_to_default_releases": {
					"type": "boolean",
					"required": false,
					"description": "Assign to default releases"
				},
				"current_release": {
					"type": "reference",
					"required": false,
					"description": "Current release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"last_finish_pipelinerun": {
					"type": "object",
					"required": false,
					"description": "Last finish pipelinerun"
				},
				"pipeline_model": {
					"type": "reference",
					"required": false,
					"description": "Pipeline model",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_model"
							}
						]
					}
				},
				"governance_type": {
					"type": "reference",
					"required": false,
					"description": "Governance type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.pipeline_type",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"root_job_name": {
					"type": "string",
					"required": false,
					"description": "Root job name",
					"max_length": 4000
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"jobs": {
					"type": "object",
					"required": false,
					"description": "Jobs"
				},
				"root_job_ci_id": {
					"type": "string",
					"required": false,
					"description": "Root job ID",
					"max_length": 4000
				},
				"notification_track": {
					"type": "boolean",
					"required": false,
					"description": "Notification track"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"ci_server": {
					"type": "reference",
					"required": false,
					"description": "CI server",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_server"
							}
						]
					}
				},
				"server_ci_id": {
					"type": "string",
					"required": false,
					"description": "CI server ID",
					"max_length": 4000
				}
			},
			"description": "Create a single pipeline."
		},
		"update": {
			"url": "/pipelines/:id",
			"method": "PUT",
			"params": {
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"notification_track_tester": {
					"type": "boolean",
					"required": false,
					"description": "Notification track tester"
				},
				"assign_to_default_releases": {
					"type": "boolean",
					"required": false,
					"description": "Assign to default releases"
				},
				"current_release": {
					"type": "reference",
					"required": false,
					"description": "Current release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"last_finish_pipelinerun": {
					"type": "object",
					"required": false,
					"description": "Last finish pipelinerun"
				},
				"pipeline_model": {
					"type": "reference",
					"required": false,
					"description": "Pipeline model",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_model"
							}
						]
					}
				},
				"governance_type": {
					"type": "reference",
					"required": false,
					"description": "Governance type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.pipeline_type",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"root_job_name": {
					"type": "string",
					"required": false,
					"description": "Root job name",
					"max_length": 4000
				},
				"jobs": {
					"type": "object",
					"required": false,
					"description": "Jobs"
				},
				"root_job_ci_id": {
					"type": "string",
					"required": false,
					"description": "Root job ID",
					"max_length": 4000
				},
				"notification_track": {
					"type": "boolean",
					"required": false,
					"description": "Notification track"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"server_ci_id": {
					"type": "string",
					"required": false,
					"description": "CI server ID",
					"max_length": 4000
				},
				"$id": null
			},
			"description": "Update a single pipeline."
		},
		"delete": {
			"url": "/pipelines/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single pipeline."
		}
	},
	"business rules": {
		"get-all": {
			"url": "/business_rules",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets business rules list."
		},
		"get": {
			"url": "/business_rules/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single business rule."
		},
		"create": {
			"url": "/business_rules",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_active": {
					"type": "boolean",
					"required": true,
					"description": "Is active"
				},
				"event_names": {
					"type": "string",
					"required": false,
					"description": "Event names",
					"max_length": 255
				},
				"dynamic_facts": {
					"type": "object",
					"required": false,
					"description": "Dynamic facts"
				},
				"relevant_field_metadatas": {
					"type": "reference",
					"required": false,
					"description": "Relevant field metadatas",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "field_metadata_string"
							},
							{
								"type": "field_metadata_custom"
							},
							{
								"type": "field_metadata_boolean"
							},
							{
								"type": "field_metadata_date_time"
							},
							{
								"type": "field_metadata_long_string"
							},
							{
								"type": "field_metadata_list"
							},
							{
								"type": "field_metadata_reference"
							},
							{
								"type": "field_metadata_ref_to_release"
							},
							{
								"type": "field_metadata_long"
							},
							{
								"type": "field_metadata_ref_to_team"
							},
							{
								"type": "field_metadata_ref_to_user"
							}
						]
					}
				},
				"relevant_phase": {
					"type": "reference",
					"required": false,
					"description": "Relevant phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"relevant_lists": {
					"type": "reference",
					"required": false,
					"description": "Relevant lists",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"condition": {
					"type": "object",
					"required": true,
					"description": "Condition"
				},
				"lists_in_action": {
					"type": "reference",
					"required": false,
					"description": "Lists in action",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"comment": {
					"type": "string",
					"required": false,
					"description": "Comment",
					"max_length": 255
				},
				"category": {
					"type": "string",
					"required": true,
					"description": "Category",
					"max_length": 255
				},
				"actions": {
					"type": "object",
					"required": true,
					"description": "Actions"
				},
				"order_id": {
					"type": "integer",
					"required": true,
					"description": "Order id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single business rule."
		},
		"update": {
			"url": "/business_rules/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_active": {
					"type": "boolean",
					"required": false,
					"description": "Is active"
				},
				"event_names": {
					"type": "string",
					"required": false,
					"description": "Event names",
					"max_length": 255
				},
				"dynamic_facts": {
					"type": "object",
					"required": false,
					"description": "Dynamic facts"
				},
				"relevant_field_metadatas": {
					"type": "reference",
					"required": false,
					"description": "Relevant field metadatas",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "field_metadata_string"
							},
							{
								"type": "field_metadata_custom"
							},
							{
								"type": "field_metadata_boolean"
							},
							{
								"type": "field_metadata_date_time"
							},
							{
								"type": "field_metadata_long_string"
							},
							{
								"type": "field_metadata_list"
							},
							{
								"type": "field_metadata_reference"
							},
							{
								"type": "field_metadata_ref_to_release"
							},
							{
								"type": "field_metadata_long"
							},
							{
								"type": "field_metadata_ref_to_team"
							},
							{
								"type": "field_metadata_ref_to_user"
							}
						]
					}
				},
				"relevant_phase": {
					"type": "reference",
					"required": false,
					"description": "Relevant phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"relevant_lists": {
					"type": "reference",
					"required": false,
					"description": "Relevant lists",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"condition": {
					"type": "object",
					"required": false,
					"description": "Condition"
				},
				"lists_in_action": {
					"type": "reference",
					"required": false,
					"description": "Lists in action",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"comment": {
					"type": "string",
					"required": false,
					"description": "Comment",
					"max_length": 255
				},
				"category": {
					"type": "string",
					"required": false,
					"description": "Category",
					"max_length": 255
				},
				"actions": {
					"type": "object",
					"required": false,
					"description": "Actions"
				},
				"order_id": {
					"type": "integer",
					"required": false,
					"description": "Order id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single business rule."
		},
		"delete": {
			"url": "/business_rules/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single business rule."
		}
	},
	"field metadata customs": {
		"get-all": {
			"url": "/custom_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata customs list."
		},
		"get": {
			"url": "/custom_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata custom."
		},
		"create": {
			"url": "/custom_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata custom."
		},
		"update": {
			"url": "/custom_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata custom."
		}
	},
	"run manuals": {
		"get-all": {
			"url": "/manual_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets run manuals list."
		},
		"get": {
			"url": "/manual_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run manual."
		},
		"create": {
			"url": "/manual_runs",
			"method": "POST",
			"params": {
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": true,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"duration": {
					"type": "integer",
					"required": false,
					"description": "Duration",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"native_status": {
					"type": "reference",
					"required": true,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"previous_release": {
					"type": "reference",
					"required": false,
					"description": "Version from Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"parent_suite": {
					"type": "reference",
					"required": false,
					"description": "Suite run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single run manual."
		},
		"update": {
			"url": "/manual_runs/:id",
			"method": "PUT",
			"params": {
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"duration": {
					"type": "integer",
					"required": false,
					"description": "Duration",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"native_status": {
					"type": "reference",
					"required": false,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single run manual."
		},
		"delete": {
			"url": "/manual_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single run manual."
		}
	},
	"agents": {
		"get-all": {
			"url": "/agents",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets agents list."
		},
		"get": {
			"url": "/agents/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single agent."
		}
	},
	"run automateds": {
		"get-all": {
			"url": "/automated_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets run automateds list."
		},
		"get": {
			"url": "/automated_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run automated."
		},
		"create": {
			"url": "/automated_runs",
			"method": "POST",
			"params": {
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"native_status": {
					"type": "reference",
					"required": true,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"parent_suite": {
					"type": "reference",
					"required": false,
					"description": "Suite run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single run automated."
		},
		"update": {
			"url": "/automated_runs/:id",
			"method": "PUT",
			"params": {
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"native_status": {
					"type": "reference",
					"required": false,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single run automated."
		},
		"delete": {
			"url": "/automated_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single run automated."
		}
	},
	"imports": {
		"get-all": {
			"url": "/imports",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets imports list."
		},
		"get": {
			"url": "/imports/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single import."
		}
	},
	"scm file changes": {
		"get-all": {
			"url": "/scm_file_changes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm file changes list."
		},
		"get": {
			"url": "/scm_file_changes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm file change."
		},
		"create": {
			"url": "/scm_file_changes",
			"method": "POST",
			"params": {
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"file": {
					"type": "string",
					"required": true,
					"description": "File",
					"max_length": 4000
				},
				"commit": {
					"type": "reference",
					"required": false,
					"description": "Commit",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_commit"
							}
						]
					}
				},
				"change_type": {
					"type": "integer",
					"required": true,
					"description": "Change type",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single scm file change."
		},
		"update": {
			"url": "/scm_file_changes/:id",
			"method": "PUT",
			"params": {
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"file": {
					"type": "string",
					"required": false,
					"description": "File",
					"max_length": 4000
				},
				"commit": {
					"type": "reference",
					"required": false,
					"description": "Commit",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_commit"
							}
						]
					}
				},
				"change_type": {
					"type": "integer",
					"required": false,
					"description": "Change type",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single scm file change."
		},
		"delete": {
			"url": "/scm_file_changes/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm file change."
		}
	},
	"plan notification items": {
		"get-all": {
			"url": "/plan_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets plan notification items list."
		},
		"get": {
			"url": "/plan_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single plan notification item."
		},
		"create": {
			"url": "/plan_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				}
			},
			"description": "Create a single plan notification item."
		},
		"update": {
			"url": "/plan_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"$id": null
			},
			"description": "Update a single plan notification item."
		},
		"delete": {
			"url": "/plan_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single plan notification item."
		}
	},
	"pipeline nodes": {
		"get-all": {
			"url": "/pipeline_nodes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipeline nodes list."
		},
		"get": {
			"url": "/pipeline_nodes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline node."
		},
		"update": {
			"url": "/pipeline_nodes/:id",
			"method": "PUT",
			"params": {
				"test_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Test tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"skipped_times": {
					"type": "integer",
					"required": false,
					"description": "Skipped times",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"test_level": {
					"type": "reference",
					"required": false,
					"description": "Test level",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.test_level",
								"type": "list_node"
							}
						]
					}
				},
				"is_hidden": {
					"type": "boolean",
					"required": false,
					"description": "Is hidden"
				},
				"is_manual": {
					"type": "boolean",
					"required": false,
					"description": "Is manual"
				},
				"classification": {
					"type": "reference",
					"required": false,
					"description": "Classification",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.pipeline_classification",
								"type": "list_node"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"dynamic_tags_map": {
					"type": "object",
					"required": false,
					"description": "Dynamic tags map"
				},
				"pipeline_root_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline root node",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"is_irrelevant": {
					"type": "boolean",
					"required": false,
					"description": "Is irrelevant"
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"is_test_ignore": {
					"type": "boolean",
					"required": false,
					"description": "Is test ignore"
				},
				"custom_report_link": {
					"type": "string",
					"required": false,
					"description": "Custom report link",
					"max_length": 255
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single pipeline node."
		}
	},
	"pa test rules": {
		"get-all": {
			"url": "/pa_test_rules",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pa test rules list."
		},
		"get": {
			"url": "/pa_test_rules/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pa test rule."
		},
		"create": {
			"url": "/pa_test_rules",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"filter_meta_data": {
					"type": "object",
					"required": true,
					"description": "Filter meta data"
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"update_all": {
					"type": "boolean",
					"required": false,
					"description": "Assign even if has value"
				},
				"product_area": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"filter": {
					"type": "object",
					"required": true,
					"description": "Filter"
				},
				"test_owner": {
					"type": "reference",
					"required": false,
					"description": "Test owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single pa test rule."
		},
		"update": {
			"url": "/pa_test_rules/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"filter_meta_data": {
					"type": "object",
					"required": false,
					"description": "Filter meta data"
				},
				"update_all": {
					"type": "boolean",
					"required": false,
					"description": "Assign even if has value"
				},
				"product_area": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"filter": {
					"type": "object",
					"required": false,
					"description": "Filter"
				},
				"test_owner": {
					"type": "reference",
					"required": false,
					"description": "Test owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single pa test rule."
		},
		"delete": {
			"url": "/pa_test_rules/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single pa test rule."
		}
	},
	"milestones": {
		"get-all": {
			"url": "/milestones",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets milestones list."
		},
		"get": {
			"url": "/milestones/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single milestone."
		},
		"create": {
			"url": "/milestones",
			"method": "POST",
			"params": {
				"date": {
					"type": "date",
					"required": true,
					"description": "Date"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"releases": {
					"type": "reference",
					"required": false,
					"description": "Releases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				}
			},
			"description": "Create a single milestone."
		},
		"update": {
			"url": "/milestones/:id",
			"method": "PUT",
			"params": {
				"date": {
					"type": "date",
					"required": false,
					"description": "Date"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"releases": {
					"type": "reference",
					"required": false,
					"description": "Releases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single milestone."
		},
		"delete": {
			"url": "/milestones/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single milestone."
		}
	},
	"attr notification items": {
		"get-all": {
			"url": "/attr_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets attr notification items list."
		},
		"get": {
			"url": "/attr_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single attr notification item."
		},
		"create": {
			"url": "/attr_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single attr notification item."
		},
		"update": {
			"url": "/attr_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single attr notification item."
		},
		"delete": {
			"url": "/attr_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single attr notification item."
		}
	},
	"taxonomy item nodes": {
		"get-all": {
			"url": "/taxonomy_item_nodes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets taxonomy item nodes list."
		},
		"get": {
			"url": "/taxonomy_item_nodes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single taxonomy item node."
		},
		"create": {
			"url": "/taxonomy_item_nodes",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run_of_default_taxonomy": {
					"type": "reference",
					"required": false,
					"description": "Run of default taxonomy",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"run_histories": {
					"type": "reference",
					"required": false,
					"description": "Run histories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"category": {
					"type": "reference",
					"required": false,
					"description": "Category",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "taxonomy_category_node"
							}
						]
					}
				}
			},
			"description": "Create a single taxonomy item node."
		},
		"update": {
			"url": "/taxonomy_item_nodes/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"run_of_default_taxonomy": {
					"type": "reference",
					"required": false,
					"description": "Run of default taxonomy",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"run_histories": {
					"type": "reference",
					"required": false,
					"description": "Run histories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"category": {
					"type": "reference",
					"required": false,
					"description": "Category",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "taxonomy_category_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single taxonomy item node."
		}
	},
	"executions": {
		"get-all": {
			"url": "/executions",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets executions list."
		},
		"get": {
			"url": "/executions/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single execution."
		},
		"create": {
			"url": "/executions",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"user_name": {
					"type": "string",
					"required": false,
					"description": "User name",
					"max_length": 255
				},
				"build_params_hash": {
					"type": "string",
					"required": false,
					"description": "Build params hash",
					"max_length": 255
				},
				"console_url": {
					"type": "string",
					"required": false,
					"description": "Console url",
					"max_length": 255
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single execution."
		},
		"update": {
			"url": "/executions/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"user_name": {
					"type": "string",
					"required": false,
					"description": "User name",
					"max_length": 255
				},
				"build_params_hash": {
					"type": "string",
					"required": false,
					"description": "Build params hash",
					"max_length": 255
				},
				"console_url": {
					"type": "string",
					"required": false,
					"description": "Console url",
					"max_length": 255
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single execution."
		},
		"delete": {
			"url": "/executions/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single execution."
		}
	},
	"field metadata ref to releases": {
		"get-all": {
			"url": "/release_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata ref to releases list."
		},
		"get": {
			"url": "/release_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata ref to release."
		},
		"create": {
			"url": "/release_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				}
			},
			"description": "Create a single field metadata ref to release."
		},
		"update": {
			"url": "/release_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata ref to release."
		}
	},
	"requirement flow items": {
		"get-all": {
			"url": "/requirement_flow_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement flow items list."
		},
		"get": {
			"url": "/requirement_flow_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement flow item."
		},
		"create": {
			"url": "/requirement_flow_items",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single requirement flow item."
		},
		"update": {
			"url": "/requirement_flow_items/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single requirement flow item."
		},
		"delete": {
			"url": "/requirement_flow_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement flow item."
		}
	},
	"team members": {
		"get-all": {
			"url": "/team_members",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets team members list."
		},
		"get": {
			"url": "/team_members/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single team member."
		},
		"create": {
			"url": "/team_members",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"team_member_team_sprints": {
					"type": "reference",
					"required": false,
					"description": "Team member team sprints",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team_member_team_sprint"
							}
						]
					}
				},
				"workspace_user": {
					"type": "reference",
					"required": true,
					"description": "Workspace user",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": true,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"capacity": {
					"type": "integer",
					"required": false,
					"description": "Capacity",
					"min_value": 0,
					"max_value": 24
				}
			},
			"description": "Create a single team member."
		},
		"update": {
			"url": "/team_members/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"capacity": {
					"type": "integer",
					"required": false,
					"description": "Capacity",
					"min_value": 0,
					"max_value": 24
				},
				"$id": null
			},
			"description": "Update a single team member."
		},
		"delete": {
			"url": "/team_members/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single team member."
		}
	},
	"field metadata ref to users": {
		"get-all": {
			"url": "/user_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata ref to users list."
		},
		"get": {
			"url": "/user_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata ref to user."
		},
		"create": {
			"url": "/user_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				}
			},
			"description": "Create a single field metadata ref to user."
		},
		"update": {
			"url": "/user_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata ref to user."
		}
	},
	"entity timestamp logs": {
		"get-all": {
			"url": "/entity_timestamp_logs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets entity timestamp logs list."
		},
		"get": {
			"url": "/entity_timestamp_logs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single entity timestamp log."
		}
	},
	"tests": {
		"get-all": {
			"url": "/tests",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets tests list."
		},
		"get": {
			"url": "/tests/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test."
		},
		"create": {
			"url": "/tests",
			"method": "POST",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"covered_manual_test": {
					"type": "reference",
					"required": false,
					"description": "Covered manual test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"scm_repository": {
					"type": "reference",
					"required": false,
					"description": "SCM repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"covering_automated_test": {
					"type": "reference",
					"required": false,
					"description": "Covering automated test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"test_level": {
					"type": "reference",
					"required": false,
					"description": "Test level",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.test_level",
								"type": "list_node"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"executable": {
					"type": "boolean",
					"required": false,
					"description": "Executable"
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"framework": {
					"type": "reference",
					"required": false,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"test_data_table": {
					"type": "reference",
					"required": false,
					"description": "Test data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_data_table"
							}
						]
					}
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single test."
		},
		"update": {
			"url": "/tests/:id",
			"method": "PUT",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"covered_manual_test": {
					"type": "reference",
					"required": false,
					"description": "Covered manual test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"covering_automated_test": {
					"type": "reference",
					"required": false,
					"description": "Covering automated test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"test_level": {
					"type": "reference",
					"required": false,
					"description": "Test level",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.test_level",
								"type": "list_node"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"executable": {
					"type": "boolean",
					"required": false,
					"description": "Executable"
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"framework": {
					"type": "reference",
					"required": false,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"test_data_table": {
					"type": "reference",
					"required": false,
					"description": "Test data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_data_table"
							}
						]
					}
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test."
		},
		"delete": {
			"url": "/tests/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test."
		}
	},
	"sprints": {
		"get-all": {
			"url": "/sprints",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets sprints list."
		},
		"get": {
			"url": "/sprints/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single sprint."
		},
		"create": {
			"url": "/sprints",
			"method": "POST",
			"params": {
				"end_date": {
					"type": "date",
					"required": true,
					"description": "End date"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "object",
					"required": false,
					"description": "Assigned teams"
				},
				"release": {
					"type": "reference",
					"required": true,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"allow_release_auto_extend": {
					"type": "boolean",
					"required": false,
					"description": "Allow release auto extend"
				},
				"start_date": {
					"type": "date",
					"required": true,
					"description": "Start date"
				}
			},
			"description": "Create a single sprint."
		},
		"update": {
			"url": "/sprints/:id",
			"method": "PUT",
			"params": {
				"end_date": {
					"type": "date",
					"required": false,
					"description": "End date"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "object",
					"required": false,
					"description": "Assigned teams"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"allow_release_auto_extend": {
					"type": "boolean",
					"required": false,
					"description": "Allow release auto extend"
				},
				"start_date": {
					"type": "date",
					"required": false,
					"description": "Start date"
				},
				"$id": null
			},
			"description": "Update a single sprint."
		},
		"delete": {
			"url": "/sprints/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single sprint."
		}
	},
	"notification items": {
		"get-all": {
			"url": "/notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets notification items list."
		},
		"get": {
			"url": "/notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single notification item."
		},
		"create": {
			"url": "/notification_items",
			"method": "POST",
			"params": {
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"comments": {
					"type": "reference",
					"required": false,
					"description": "Comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				}
			},
			"description": "Create a single notification item."
		},
		"update": {
			"url": "/notification_items/:id",
			"method": "PUT",
			"params": {
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"comments": {
					"type": "reference",
					"required": false,
					"description": "Comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"$id": null
			},
			"description": "Update a single notification item."
		},
		"delete": {
			"url": "/notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single notification item."
		}
	},
	"clusters": {
		"get-all": {
			"url": "/clusters",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets clusters list."
		},
		"get": {
			"url": "/clusters/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single cluster."
		},
		"create": {
			"url": "/clusters",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"like": {
					"type": "reference",
					"required": false,
					"description": "Like",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"dislike": {
					"type": "reference",
					"required": false,
					"description": "Dislike",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"runs": {
					"type": "reference",
					"required": false,
					"description": "Runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"bdi_id": {
					"type": "integer",
					"required": false,
					"description": "Bdi id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single cluster."
		},
		"update": {
			"url": "/clusters/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"like": {
					"type": "reference",
					"required": false,
					"description": "Like",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"dislike": {
					"type": "reference",
					"required": false,
					"description": "Dislike",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"runs": {
					"type": "reference",
					"required": false,
					"description": "Runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"bdi_id": {
					"type": "integer",
					"required": false,
					"description": "Bdi id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single cluster."
		},
		"delete": {
			"url": "/clusters/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single cluster."
		}
	},
	"run histories": {
		"get-all": {
			"url": "/previous_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets run histories list."
		},
		"get": {
			"url": "/previous_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run history."
		},
		"create": {
			"url": "/previous_runs",
			"method": "POST",
			"params": {
				"cluster": {
					"type": "reference",
					"required": false,
					"description": "Cluster",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": true,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"run_started": {
					"type": "date_time",
					"required": false,
					"description": "Run started"
				},
				"build_test_status": {
					"type": "string",
					"required": false,
					"description": "Build test status",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 255
				},
				"pipeline_id": {
					"type": "reference",
					"required": true,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"pipeline_run_id": {
					"type": "reference",
					"required": true,
					"description": "Pipeline Run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"on_it_id": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single run history."
		},
		"update": {
			"url": "/previous_runs/:id",
			"method": "PUT",
			"params": {
				"cluster": {
					"type": "reference",
					"required": false,
					"description": "Cluster",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"run_started": {
					"type": "date_time",
					"required": false,
					"description": "Run started"
				},
				"build_test_status": {
					"type": "string",
					"required": false,
					"description": "Build test status",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 255
				},
				"on_it_id": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single run history."
		},
		"delete": {
			"url": "/previous_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single run history."
		}
	},
	"defects": {
		"get-all": {
			"url": "/defects",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets defects list."
		},
		"get": {
			"url": "/defects/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single defect."
		},
		"create": {
			"url": "/defects",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Defect root cause",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_root_level",
								"type": "list_node"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"fixed_in_build": {
					"type": "integer",
					"required": false,
					"description": "Fixed in build",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defect_type": {
					"type": "reference",
					"required": false,
					"description": "Defect type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_type",
								"type": "list_node"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"fixed_on": {
					"type": "date",
					"required": false,
					"description": "Fixed on"
				},
				"run_step": {
					"type": "reference",
					"required": false,
					"description": "Run step",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"issue": {
					"type": "reference",
					"required": false,
					"description": "Issue",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"detected_in_build": {
					"type": "integer",
					"required": false,
					"description": "Detected in build",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"detected_in_release": {
					"type": "reference",
					"required": false,
					"description": "Detected in release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"detected_by": {
					"type": "reference",
					"required": false,
					"description": "Detected by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"qa_owner": {
					"type": "reference",
					"required": false,
					"description": "QA owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"closed_on": {
					"type": "date",
					"required": false,
					"description": "Closed on"
				},
				"new_tasks": {
					"type": "object",
					"required": false,
					"description": "Tasks to generate"
				},
				"severity": {
					"type": "reference",
					"required": false,
					"description": "Severity",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.severity",
								"type": "list_node"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Defect(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Linked Story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				}
			},
			"description": "Create a single defect."
		},
		"update": {
			"url": "/defects/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Defect root cause",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_root_level",
								"type": "list_node"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"fixed_in_build": {
					"type": "integer",
					"required": false,
					"description": "Fixed in build",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defect_type": {
					"type": "reference",
					"required": false,
					"description": "Defect type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_type",
								"type": "list_node"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"fixed_on": {
					"type": "date",
					"required": false,
					"description": "Fixed on"
				},
				"run_step": {
					"type": "reference",
					"required": false,
					"description": "Run step",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"detected_in_build": {
					"type": "integer",
					"required": false,
					"description": "Detected in build",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"detected_in_release": {
					"type": "reference",
					"required": false,
					"description": "Detected in release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"detected_by": {
					"type": "reference",
					"required": false,
					"description": "Detected by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"qa_owner": {
					"type": "reference",
					"required": false,
					"description": "QA owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"closed_on": {
					"type": "date",
					"required": false,
					"description": "Closed on"
				},
				"severity": {
					"type": "reference",
					"required": false,
					"description": "Severity",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.severity",
								"type": "list_node"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Defect(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Linked Story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single defect."
		},
		"delete": {
			"url": "/defects/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single defect."
		}
	},
	"requirement roots": {
		"get-all": {
			"url": "/requirement_roots",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement roots list."
		},
		"get": {
			"url": "/requirement_roots/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement root."
		},
		"create": {
			"url": "/requirement_roots",
			"method": "POST",
			"params": {
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single requirement root."
		},
		"update": {
			"url": "/requirement_roots/:id",
			"method": "PUT",
			"params": {
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single requirement root."
		},
		"delete": {
			"url": "/requirement_roots/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement root."
		}
	},
	"field metadata strings": {
		"get-all": {
			"url": "/string_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata strings list."
		},
		"get": {
			"url": "/string_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata string."
		},
		"create": {
			"url": "/string_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata string."
		},
		"update": {
			"url": "/string_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata string."
		}
	},
	"metaphases": {
		"get-all": {
			"url": "/metaphases",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets metaphases list."
		},
		"get": {
			"url": "/metaphases/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single metaphase."
		}
	},
	"requirement flow features": {
		"get-all": {
			"url": "/requirement_flow_features",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement flow features list."
		},
		"get": {
			"url": "/requirement_flow_features/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement flow feature."
		},
		"create": {
			"url": "/requirement_flow_features",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow_item"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"feature": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"requirement_priorities": {
					"type": "reference",
					"required": false,
					"description": "Requirement priorities",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"create_in_backlog": {
					"type": "boolean",
					"required": false,
					"description": "Create in backlog"
				}
			},
			"description": "Create a single requirement flow feature."
		},
		"update": {
			"url": "/requirement_flow_features/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow_item"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"feature": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"requirement_priorities": {
					"type": "reference",
					"required": false,
					"description": "Requirement priorities",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"create_in_backlog": {
					"type": "boolean",
					"required": false,
					"description": "Create in backlog"
				},
				"$id": null
			},
			"description": "Update a single requirement flow feature."
		},
		"delete": {
			"url": "/requirement_flow_features/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement flow feature."
		}
	},
	"wip limits": {
		"get-all": {
			"url": "/story_board_configuration",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets wip limits list."
		},
		"get": {
			"url": "/story_board_configuration/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single wip limit."
		},
		"create": {
			"url": "/story_board_configuration",
			"method": "POST",
			"params": {
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"hidden": {
					"type": "boolean",
					"required": false,
					"description": "Hidden"
				},
				"team": {
					"type": "reference",
					"required": true,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"exceeded_cycle_time": {
					"type": "boolean",
					"required": false,
					"description": "Exceeded cycle time"
				},
				"column_index": {
					"type": "integer",
					"required": false,
					"description": "Column index",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"limit": {
					"type": "integer",
					"required": false,
					"description": "Limit",
					"min_value": 0,
					"max_value": 1000
				},
				"cycle_time": {
					"type": "integer",
					"required": false,
					"description": "Cycle time",
					"min_value": 0,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single wip limit."
		},
		"update": {
			"url": "/story_board_configuration/:id",
			"method": "PUT",
			"params": {
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"hidden": {
					"type": "boolean",
					"required": false,
					"description": "Hidden"
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"exceeded_cycle_time": {
					"type": "boolean",
					"required": false,
					"description": "Exceeded cycle time"
				},
				"column_index": {
					"type": "integer",
					"required": false,
					"description": "Column index",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"limit": {
					"type": "integer",
					"required": false,
					"description": "Limit",
					"min_value": 0,
					"max_value": 1000
				},
				"cycle_time": {
					"type": "integer",
					"required": false,
					"description": "Cycle time",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single wip limit."
		},
		"delete": {
			"url": "/story_board_configuration/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single wip limit."
		}
	},
	"failed test notification items": {
		"get-all": {
			"url": "/failed_test_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets failed test notification items list."
		},
		"get": {
			"url": "/failed_test_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single failed test notification item."
		},
		"create": {
			"url": "/failed_test_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single failed test notification item."
		},
		"update": {
			"url": "/failed_test_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single failed test notification item."
		},
		"delete": {
			"url": "/failed_test_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single failed test notification item."
		}
	},
	"code files": {
		"get-all": {
			"url": "/code_files",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets code files list."
		},
		"get": {
			"url": "/code_files/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single code file."
		},
		"create": {
			"url": "/code_files",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defects": {
					"type": "reference",
					"required": false,
					"description": "Defects",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"scm_file_changes": {
					"type": "reference",
					"required": false,
					"description": "Scm file changes",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_file_change"
							}
						]
					}
				}
			},
			"description": "Create a single code file."
		},
		"update": {
			"url": "/code_files/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defects": {
					"type": "reference",
					"required": false,
					"description": "Defects",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"scm_file_changes": {
					"type": "reference",
					"required": false,
					"description": "Scm file changes",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_file_change"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single code file."
		},
		"delete": {
			"url": "/code_files/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single code file."
		}
	},
	"requirement documents": {
		"get-all": {
			"url": "/requirement_documents",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement documents list."
		},
		"get": {
			"url": "/requirement_documents/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement document."
		},
		"create": {
			"url": "/requirement_documents",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"features": {
					"type": "reference",
					"required": false,
					"description": "Features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"related_from_requirements": {
					"type": "reference",
					"required": false,
					"description": "Related from requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"related_to_requirement": {
					"type": "reference",
					"required": false,
					"description": "Related to requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single requirement document."
		},
		"update": {
			"url": "/requirement_documents/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"features": {
					"type": "reference",
					"required": false,
					"description": "Features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"related_from_requirements": {
					"type": "reference",
					"required": false,
					"description": "Related from requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"related_to_requirement": {
					"type": "reference",
					"required": false,
					"description": "Related to requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single requirement document."
		},
		"delete": {
			"url": "/requirement_documents/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement document."
		}
	},
	"pipeline security tools": {
		"get-all": {
			"url": "/pipeline_security_tools",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipeline security tools list."
		},
		"get": {
			"url": "/pipeline_security_tools/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline security tool."
		},
		"create": {
			"url": "/pipeline_security_tools",
			"method": "POST",
			"params": {
				"pipeline": {
					"type": "reference",
					"required": true,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"parameters": {
					"type": "string",
					"required": false,
					"description": "Parameters",
					"max_length": 255
				},
				"tool": {
					"type": "string",
					"required": false,
					"description": "Tool",
					"max_length": 255
				}
			},
			"description": "Create a single pipeline security tool."
		},
		"update": {
			"url": "/pipeline_security_tools/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"parameters": {
					"type": "string",
					"required": false,
					"description": "Parameters",
					"max_length": 255
				},
				"tool": {
					"type": "string",
					"required": false,
					"description": "Tool",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single pipeline security tool."
		},
		"delete": {
			"url": "/pipeline_security_tools/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single pipeline security tool."
		}
	},
	"comment notification items": {
		"get-all": {
			"url": "/comment_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets comment notification items list."
		},
		"get": {
			"url": "/comment_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single comment notification item."
		},
		"create": {
			"url": "/comment_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"comments": {
					"type": "reference",
					"required": false,
					"description": "Comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single comment notification item."
		},
		"update": {
			"url": "/comment_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"comments": {
					"type": "reference",
					"required": false,
					"description": "Comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single comment notification item."
		},
		"delete": {
			"url": "/comment_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single comment notification item."
		}
	},
	"ppr failed notification items": {
		"get-all": {
			"url": "/ppr_failed_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets ppr failed notification items list."
		},
		"get": {
			"url": "/ppr_failed_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single ppr failed notification item."
		},
		"create": {
			"url": "/ppr_failed_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single ppr failed notification item."
		},
		"update": {
			"url": "/ppr_failed_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single ppr failed notification item."
		},
		"delete": {
			"url": "/ppr_failed_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single ppr failed notification item."
		}
	},
	"field metadata references": {
		"get-all": {
			"url": "/reference_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata references list."
		},
		"get": {
			"url": "/reference_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata reference."
		},
		"create": {
			"url": "/reference_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				},
				"referenced_entity_name": {
					"type": "string",
					"required": false,
					"description": "Referenced entity name",
					"max_length": 255
				}
			},
			"description": "Create a single field metadata reference."
		},
		"update": {
			"url": "/reference_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata reference."
		}
	},
	"test automateds": {
		"get-all": {
			"url": "/automated_tests",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test automateds list."
		},
		"get": {
			"url": "/automated_tests/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test automated."
		},
		"create": {
			"url": "/automated_tests",
			"method": "POST",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"covered_manual_test": {
					"type": "reference",
					"required": false,
					"description": "Covered manual test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"scm_repository": {
					"type": "reference",
					"required": false,
					"description": "SCM repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"test_level": {
					"type": "reference",
					"required": false,
					"description": "Test level",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.test_level",
								"type": "list_node"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"executable": {
					"type": "boolean",
					"required": false,
					"description": "Executable"
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"framework": {
					"type": "reference",
					"required": false,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single test automated."
		},
		"update": {
			"url": "/automated_tests/:id",
			"method": "PUT",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"covered_manual_test": {
					"type": "reference",
					"required": false,
					"description": "Covered manual test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"test_level": {
					"type": "reference",
					"required": false,
					"description": "Test level",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.test_level",
								"type": "list_node"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"executable": {
					"type": "boolean",
					"required": false,
					"description": "Executable"
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"framework": {
					"type": "reference",
					"required": false,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test automated."
		},
		"delete": {
			"url": "/automated_tests/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test automated."
		}
	},
	"test data tables": {
		"get-all": {
			"url": "/test_data_tables",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test data tables list."
		},
		"get": {
			"url": "/test_data_tables/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test data table."
		},
		"create": {
			"url": "/test_data_tables",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"tests": {
					"type": "reference",
					"required": false,
					"description": "Tests",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"data": {
					"type": "object",
					"required": false,
					"description": "Data"
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				}
			},
			"description": "Create a single test data table."
		},
		"update": {
			"url": "/test_data_tables/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"data": {
					"type": "object",
					"required": false,
					"description": "Data"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"$id": null
			},
			"description": "Update a single test data table."
		},
		"delete": {
			"url": "/test_data_tables/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test data table."
		}
	},
	"quality stories": {
		"get-all": {
			"url": "/quality_stories",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets quality stories list."
		},
		"get": {
			"url": "/quality_stories/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single quality story."
		},
		"create": {
			"url": "/quality_stories",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Quality story type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.quality_story_type",
								"type": "list_node"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"new_tasks": {
					"type": "object",
					"required": false,
					"description": "Tasks to generate"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Quality Story(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Quality Story(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				}
			},
			"description": "Create a single quality story."
		},
		"update": {
			"url": "/quality_stories/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Quality story type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.quality_story_type",
								"type": "list_node"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Quality Story(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Quality Story(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single quality story."
		},
		"delete": {
			"url": "/quality_stories/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single quality story."
		}
	},
	"form layouts": {
		"get-all": {
			"url": "/form_layouts",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets form layouts list."
		},
		"get": {
			"url": "/form_layouts/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single form layout."
		},
		"create": {
			"url": "/form_layouts",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"override_key": {
					"type": "string",
					"required": false,
					"description": "Override key",
					"max_length": 255
				},
				"entity_subtype": {
					"type": "string",
					"required": false,
					"description": "Entity subtype",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"is_default": {
					"type": "integer",
					"required": false,
					"description": "Is default",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"body": {
					"type": "object",
					"required": false,
					"description": "Body"
				}
			},
			"description": "Create a single form layout."
		},
		"update": {
			"url": "/form_layouts/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"override_key": {
					"type": "string",
					"required": false,
					"description": "Override key",
					"max_length": 255
				},
				"entity_subtype": {
					"type": "string",
					"required": false,
					"description": "Entity subtype",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"is_default": {
					"type": "integer",
					"required": false,
					"description": "Is default",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"body": {
					"type": "object",
					"required": false,
					"description": "Body"
				},
				"$id": null
			},
			"description": "Update a single form layout."
		},
		"delete": {
			"url": "/form_layouts/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single form layout."
		}
	},
	"requirements": {
		"get-all": {
			"url": "/requirements",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirements list."
		},
		"get": {
			"url": "/requirements/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement."
		},
		"create": {
			"url": "/requirements",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_root"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"features": {
					"type": "reference",
					"required": false,
					"description": "Features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"priority_group_assets": {
					"type": "reference",
					"required": false,
					"description": "Priority group assets",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"feature": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"requirement_priorities": {
					"type": "reference",
					"required": false,
					"description": "Requirement priorities",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"related_from_requirements": {
					"type": "reference",
					"required": false,
					"description": "Related from requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"related_to_requirement": {
					"type": "reference",
					"required": false,
					"description": "Related to requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"create_in_backlog": {
					"type": "boolean",
					"required": false,
					"description": "Create in backlog"
				}
			},
			"description": "Create a single requirement."
		},
		"update": {
			"url": "/requirements/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_root"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"features": {
					"type": "reference",
					"required": false,
					"description": "Features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"priority_group_assets": {
					"type": "reference",
					"required": false,
					"description": "Priority group assets",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"feature": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"requirement_priorities": {
					"type": "reference",
					"required": false,
					"description": "Requirement priorities",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"related_from_requirements": {
					"type": "reference",
					"required": false,
					"description": "Related from requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"related_to_requirement": {
					"type": "reference",
					"required": false,
					"description": "Related to requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"create_in_backlog": {
					"type": "boolean",
					"required": false,
					"description": "Create in backlog"
				},
				"$id": null
			},
			"description": "Update a single requirement."
		},
		"delete": {
			"url": "/requirements/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement."
		}
	},
	"relations": {
		"get-all": {
			"url": "/relations",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets relations list."
		},
		"get": {
			"url": "/relations/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single relation."
		}
	},
	"histories": {
		"get-all": {
			"url": "/historys",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets histories list."
		},
		"get": {
			"url": "/historys/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single history."
		}
	},
	"teams": {
		"get-all": {
			"url": "/teams",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets teams list."
		},
		"get": {
			"url": "/teams/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single team."
		},
		"create": {
			"url": "/teams",
			"method": "POST",
			"params": {
				"favorites": {
					"type": "reference",
					"required": false,
					"description": "Favorites",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "favorite"
							}
						]
					}
				},
				"assign_to_new_releases": {
					"type": "boolean",
					"required": false,
					"description": "Assign to new releases"
				},
				"shared_templates": {
					"type": "reference",
					"required": false,
					"description": "Shared templates",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "template"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"estimated_velocity": {
					"type": "integer",
					"required": false,
					"description": "Estimated velocity",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"planning_deadline": {
					"type": "integer",
					"required": false,
					"description": "Planning deadline",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"members": {
					"type": "reference",
					"required": false,
					"description": "Members",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"releases": {
					"type": "reference",
					"required": false,
					"description": "Releases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"metaphase_wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Metaphase wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "metaphase_wip_limit"
							}
						]
					}
				},
				"wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "wip_limit"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"team_lead": {
					"type": "reference",
					"required": false,
					"description": "Team lead",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single team."
		},
		"update": {
			"url": "/teams/:id",
			"method": "PUT",
			"params": {
				"favorites": {
					"type": "reference",
					"required": false,
					"description": "Favorites",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "favorite"
							}
						]
					}
				},
				"assign_to_new_releases": {
					"type": "boolean",
					"required": false,
					"description": "Assign to new releases"
				},
				"shared_templates": {
					"type": "reference",
					"required": false,
					"description": "Shared templates",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "template"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"estimated_velocity": {
					"type": "integer",
					"required": false,
					"description": "Estimated velocity",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"planning_deadline": {
					"type": "integer",
					"required": false,
					"description": "Planning deadline",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"members": {
					"type": "reference",
					"required": false,
					"description": "Members",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"releases": {
					"type": "reference",
					"required": false,
					"description": "Releases",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"metaphase_wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Metaphase wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "metaphase_wip_limit"
							}
						]
					}
				},
				"wip_limits": {
					"type": "reference",
					"required": false,
					"description": "Wip limits",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "wip_limit"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"team_lead": {
					"type": "reference",
					"required": false,
					"description": "Team lead",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single team."
		},
		"delete": {
			"url": "/teams/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single team."
		}
	},
	"ci servers": {
		"get-all": {
			"url": "/ci_servers",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets ci servers list."
		},
		"get": {
			"url": "/ci_servers/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single ci server."
		},
		"create": {
			"url": "/ci_servers",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "URL",
					"max_length": 255
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"instance_id": {
					"type": "string",
					"required": false,
					"description": "Instance ID",
					"max_length": 255
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"server_type": {
					"type": "string",
					"required": false,
					"description": "Server type",
					"max_length": 255
				}
			},
			"description": "Create a single ci server."
		},
		"update": {
			"url": "/ci_servers/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "URL",
					"max_length": 255
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"server_type": {
					"type": "string",
					"required": false,
					"description": "Server type",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single ci server."
		},
		"delete": {
			"url": "/ci_servers/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single ci server."
		}
	},
	"usage instances": {
		"get-all": {
			"url": "/usage_instances",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets usage instances list."
		},
		"get": {
			"url": "/usage_instances/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single usage instance."
		},
		"create": {
			"url": "/usage_instances",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"latency": {
					"type": "string",
					"required": false,
					"description": "Latency",
					"max_length": 255
				},
				"from_time": {
					"type": "integer",
					"required": false,
					"description": "From time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"intensity": {
					"type": "integer",
					"required": false,
					"description": "Intensity",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"failure_rate": {
					"type": "string",
					"required": false,
					"description": "Failure rate",
					"max_length": 255
				},
				"response_time": {
					"type": "string",
					"required": false,
					"description": "Response time",
					"max_length": 255
				},
				"throughput": {
					"type": "string",
					"required": false,
					"description": "Throughput",
					"max_length": 255
				},
				"to_time": {
					"type": "integer",
					"required": false,
					"description": "To time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single usage instance."
		},
		"update": {
			"url": "/usage_instances/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"latency": {
					"type": "string",
					"required": false,
					"description": "Latency",
					"max_length": 255
				},
				"from_time": {
					"type": "integer",
					"required": false,
					"description": "From time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"intensity": {
					"type": "integer",
					"required": false,
					"description": "Intensity",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"failure_rate": {
					"type": "string",
					"required": false,
					"description": "Failure rate",
					"max_length": 255
				},
				"response_time": {
					"type": "string",
					"required": false,
					"description": "Response time",
					"max_length": 255
				},
				"throughput": {
					"type": "string",
					"required": false,
					"description": "Throughput",
					"max_length": 255
				},
				"to_time": {
					"type": "integer",
					"required": false,
					"description": "To time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single usage instance."
		},
		"delete": {
			"url": "/usage_instances/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single usage instance."
		}
	},
	"comment last viewed by users": {
		"get-all": {
			"url": "/comment_last_viewed_by_users",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets comment last viewed by users list."
		},
		"get": {
			"url": "/comment_last_viewed_by_users/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single comment last viewed by user."
		},
		"create": {
			"url": "/comment_last_viewed_by_users",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"user_id": {
					"type": "integer",
					"required": false,
					"description": "User id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"entity_id": {
					"type": "integer",
					"required": false,
					"description": "Entity id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"last_viewed_ord_num": {
					"type": "integer",
					"required": false,
					"description": "Last viewed ord num",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single comment last viewed by user."
		},
		"update": {
			"url": "/comment_last_viewed_by_users/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "string",
					"required": false,
					"description": "Entity type",
					"max_length": 255
				},
				"user_id": {
					"type": "integer",
					"required": false,
					"description": "User id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"entity_id": {
					"type": "integer",
					"required": false,
					"description": "Entity id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"last_viewed_ord_num": {
					"type": "integer",
					"required": false,
					"description": "Last viewed ord num",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single comment last viewed by user."
		},
		"delete": {
			"url": "/comment_last_viewed_by_users/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single comment last viewed by user."
		}
	},
	"run suites": {
		"get-all": {
			"url": "/suite_run",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets run suites list."
		},
		"get": {
			"url": "/suite_run/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run suite."
		},
		"create": {
			"url": "/suite_run",
			"method": "POST",
			"params": {
				"release": {
					"type": "reference",
					"required": true,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Default run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"native_status": {
					"type": "reference",
					"required": true,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"previous_release": {
					"type": "reference",
					"required": false,
					"description": "Version from Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"default_taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Default Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single run suite."
		},
		"update": {
			"url": "/suite_run/:id",
			"method": "PUT",
			"params": {
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Default run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"native_status": {
					"type": "reference",
					"required": false,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"default_taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Default Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single run suite."
		},
		"delete": {
			"url": "/suite_run/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single run suite."
		}
	},
	"slacks": {
		"get-all": {
			"url": "/slacks",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets slacks list."
		},
		"get": {
			"url": "/slacks/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single slack."
		},
		"create": {
			"url": "/slacks",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"publish_octane_data": {
					"type": "boolean",
					"required": true,
					"description": "Publish octane data"
				},
				"team_domain": {
					"type": "string",
					"required": true,
					"description": "Team domain",
					"max_length": 255
				},
				"team_id": {
					"type": "string",
					"required": true,
					"description": "Team id",
					"max_length": 255
				},
				"team_name": {
					"type": "string",
					"required": true,
					"description": "Team name",
					"max_length": 255
				}
			},
			"description": "Create a single slack."
		},
		"update": {
			"url": "/slacks/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"publish_octane_data": {
					"type": "boolean",
					"required": false,
					"description": "Publish octane data"
				},
				"team_domain": {
					"type": "string",
					"required": false,
					"description": "Team domain",
					"max_length": 255
				},
				"team_id": {
					"type": "string",
					"required": false,
					"description": "Team id",
					"max_length": 255
				},
				"team_name": {
					"type": "string",
					"required": false,
					"description": "Team name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single slack."
		},
		"delete": {
			"url": "/slacks/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single slack."
		}
	},
	"tracked workspaces": {
		"get-all": {
			"url": "/tracked_workspaces",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets tracked workspaces list."
		},
		"get": {
			"url": "/tracked_workspaces/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single tracked workspace."
		},
		"update": {
			"url": "/tracked_workspaces/:id",
			"method": "PUT",
			"params": {
				"is_active": {
					"type": "boolean",
					"required": false,
					"description": "Is active"
				},
				"$id": null
			},
			"description": "Update a single tracked workspace."
		}
	},
	"pipeline node runs": {
		"get-all": {
			"url": "/pipeline_node_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipeline node runs list."
		},
		"get": {
			"url": "/pipeline_node_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline node run."
		},
		"create": {
			"url": "/pipeline_node_runs",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"on_it_user": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single pipeline node run."
		},
		"update": {
			"url": "/pipeline_node_runs/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"on_it_user": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single pipeline node run."
		},
		"delete": {
			"url": "/pipeline_node_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single pipeline node run."
		}
	},
	"log lines": {
		"get-all": {
			"url": "/log_lines",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets log lines list."
		},
		"get": {
			"url": "/log_lines/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single log line."
		},
		"create": {
			"url": "/log_lines",
			"method": "POST",
			"params": {
				"feedback": {
					"type": "string",
					"required": false,
					"description": "Feedback",
					"max_length": 255
				},
				"rca_label": {
					"type": "string",
					"required": false,
					"description": "Rca label",
					"max_length": 255
				}
			},
			"description": "Create a single log line."
		},
		"update": {
			"url": "/log_lines/:id",
			"method": "PUT",
			"params": {
				"feedback": {
					"type": "string",
					"required": false,
					"description": "Feedback",
					"max_length": 255
				},
				"rca_label": {
					"type": "string",
					"required": false,
					"description": "Rca label",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single log line."
		},
		"delete": {
			"url": "/log_lines/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single log line."
		}
	},
	"test suites": {
		"get-all": {
			"url": "/test_suites",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test suites list."
		},
		"get": {
			"url": "/test_suites/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test suite."
		},
		"create": {
			"url": "/test_suites",
			"method": "POST",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				}
			},
			"description": "Create a single test suite."
		},
		"update": {
			"url": "/test_suites/:id",
			"method": "PUT",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"modified_by": {
					"type": "reference",
					"required": false,
					"description": "Modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test suite."
		},
		"delete": {
			"url": "/test_suites/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test suite."
		}
	},
	"work items": {
		"get-all": {
			"url": "/work_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets work items list."
		},
		"get": {
			"url": "/work_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single work item."
		},
		"create": {
			"url": "/work_items",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Defect root cause",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_root_level",
								"type": "list_node"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Type",
					"max_length": 255
				},
				"fixed_on": {
					"type": "date",
					"required": false,
					"description": "Fixed on"
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"issue": {
					"type": "reference",
					"required": false,
					"description": "Issue",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"initial_estimate": {
					"type": "integer",
					"required": false,
					"description": "Initial estimate",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"epic_type": {
					"type": "reference",
					"required": false,
					"description": "Epic type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.epic_type",
								"type": "list_node"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Originated story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Original story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"fixed_in_build": {
					"type": "integer",
					"required": false,
					"description": "Fixed in build",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Quality story type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.quality_story_type",
								"type": "list_node"
							}
						]
					}
				},
				"defect_type": {
					"type": "reference",
					"required": false,
					"description": "Defect type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_type",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"run_step": {
					"type": "reference",
					"required": false,
					"description": "Run step",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"detected_in_build": {
					"type": "integer",
					"required": false,
					"description": "Detected in build",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"detected_in_release": {
					"type": "reference",
					"required": false,
					"description": "Detected in release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"requirement_feature": {
					"type": "reference",
					"required": false,
					"description": "Requirement feature",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"detected_by": {
					"type": "reference",
					"required": false,
					"description": "Detected by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Type",
					"max_length": 255
				},
				"qa_owner": {
					"type": "reference",
					"required": false,
					"description": "QA owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"closed_on": {
					"type": "date",
					"required": false,
					"description": "Closed on"
				},
				"new_tasks": {
					"type": "object",
					"required": false,
					"description": "Tasks to generate"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"severity": {
					"type": "reference",
					"required": false,
					"description": "Severity",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.severity",
								"type": "list_node"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"feature_type": {
					"type": "reference",
					"required": false,
					"description": "Feature type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.feature_type",
								"type": "list_node"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single work item."
		},
		"update": {
			"url": "/work_items/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Defect root cause",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_root_level",
								"type": "list_node"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Type",
					"max_length": 255
				},
				"fixed_on": {
					"type": "date",
					"required": false,
					"description": "Fixed on"
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"code_file": {
					"type": "reference",
					"required": false,
					"description": "Code file",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "code_file"
							}
						]
					}
				},
				"initial_estimate": {
					"type": "integer",
					"required": false,
					"description": "Initial estimate",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"epic_type": {
					"type": "reference",
					"required": false,
					"description": "Epic type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.epic_type",
								"type": "list_node"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Originated story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Original story",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"fixed_in_build": {
					"type": "integer",
					"required": false,
					"description": "Fixed in build",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Quality story type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.quality_story_type",
								"type": "list_node"
							}
						]
					}
				},
				"defect_type": {
					"type": "reference",
					"required": false,
					"description": "Defect type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.defect_type",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"run_step": {
					"type": "reference",
					"required": false,
					"description": "Run step",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"detected_in_build": {
					"type": "integer",
					"required": false,
					"description": "Detected in build",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"detected_in_release": {
					"type": "reference",
					"required": false,
					"description": "Detected in release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"requirement_feature": {
					"type": "reference",
					"required": false,
					"description": "Requirement feature",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"detected_by": {
					"type": "reference",
					"required": false,
					"description": "Detected by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"qa_owner": {
					"type": "reference",
					"required": false,
					"description": "QA owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"closed_on": {
					"type": "date",
					"required": false,
					"description": "Closed on"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"severity": {
					"type": "reference",
					"required": false,
					"description": "Severity",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.severity",
								"type": "list_node"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"feature_type": {
					"type": "reference",
					"required": false,
					"description": "Feature type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.feature_type",
								"type": "list_node"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single work item."
		},
		"delete": {
			"url": "/work_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single work item."
		}
	},
	"background tasks": {
		"get-all": {
			"url": "/background_tasks",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets background tasks list."
		},
		"get": {
			"url": "/background_tasks/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single background task."
		}
	},
	"audit logs": {
		"get-all": {
			"url": "/audit_logs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets audit logs list."
		},
		"get": {
			"url": "/audit_logs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single audit log."
		}
	},
	"releases": {
		"get-all": {
			"url": "/releases",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets releases list."
		},
		"get": {
			"url": "/releases/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single release."
		},
		"create": {
			"url": "/releases",
			"method": "POST",
			"params": {
				"end_date": {
					"type": "date",
					"required": true,
					"description": "End date"
				},
				"run_previous": {
					"type": "reference",
					"required": false,
					"description": "Run previous",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_manual"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"apppulse_app": {
					"type": "reference",
					"required": false,
					"description": "Apppulse app",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "apppulse_app"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"sprint_duration": {
					"type": "integer",
					"required": false,
					"description": "Sprint duration",
					"min_value": 1,
					"max_value": 7000
				},
				"start_date": {
					"type": "date",
					"required": true,
					"description": "Start date"
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"team_sprint_relation": {
					"type": "reference",
					"required": false,
					"description": "Team sprint relation",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team_sprint"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"is_default": {
					"type": "boolean",
					"required": false,
					"description": "Is default"
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"milestones": {
					"type": "reference",
					"required": false,
					"description": "Milestones",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "milestone"
							}
						]
					}
				},
				"agile_type": {
					"type": "reference",
					"required": false,
					"description": "Type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.release_agile_type",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single release."
		},
		"update": {
			"url": "/releases/:id",
			"method": "PUT",
			"params": {
				"end_date": {
					"type": "date",
					"required": false,
					"description": "End date"
				},
				"run_previous": {
					"type": "reference",
					"required": false,
					"description": "Run previous",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_manual"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"apppulse_app": {
					"type": "reference",
					"required": false,
					"description": "Apppulse app",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "apppulse_app"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"start_date": {
					"type": "date",
					"required": false,
					"description": "Start date"
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"team_sprint_relation": {
					"type": "reference",
					"required": false,
					"description": "Team sprint relation",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team_sprint"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"is_default": {
					"type": "boolean",
					"required": false,
					"description": "Is default"
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"milestones": {
					"type": "reference",
					"required": false,
					"description": "Milestones",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "milestone"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single release."
		},
		"delete": {
			"url": "/releases/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single release."
		}
	},
	"gherkin automated runs": {
		"get-all": {
			"url": "/gherkin_automated_runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets gherkin automated runs list."
		},
		"get": {
			"url": "/gherkin_automated_runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single gherkin automated run."
		},
		"create": {
			"url": "/gherkin_automated_runs",
			"method": "POST",
			"params": {
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 4000
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"full_error_details": {
					"type": "boolean",
					"required": false,
					"description": "Full error details"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"build_and_test_job": {
					"type": "string",
					"required": false,
					"description": "Build",
					"max_length": 4000
				},
				"ci_server_type": {
					"type": "string",
					"required": false,
					"description": "Ci server type",
					"max_length": 4000
				},
				"native_status": {
					"type": "reference",
					"required": true,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single gherkin automated run."
		},
		"update": {
			"url": "/gherkin_automated_runs/:id",
			"method": "PUT",
			"params": {
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 4000
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"full_error_details": {
					"type": "boolean",
					"required": false,
					"description": "Full error details"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"build_and_test_job": {
					"type": "string",
					"required": false,
					"description": "Build",
					"max_length": 4000
				},
				"ci_server_type": {
					"type": "string",
					"required": false,
					"description": "Ci server type",
					"max_length": 4000
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single gherkin automated run."
		},
		"delete": {
			"url": "/gherkin_automated_runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single gherkin automated run."
		}
	},
	"uncovered urls": {
		"get-all": {
			"url": "/uncovered_urls",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets uncovered urls list."
		},
		"get": {
			"url": "/uncovered_urls/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single uncovered url."
		},
		"create": {
			"url": "/uncovered_urls",
			"method": "POST",
			"params": {
				"release": {
					"type": "integer",
					"required": false,
					"description": "Release",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"prod_provider": {
					"type": "integer",
					"required": false,
					"description": "Prod provider",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"dev_provider": {
					"type": "integer",
					"required": false,
					"description": "Dev provider",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"to_time": {
					"type": "integer",
					"required": false,
					"description": "To time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"from_time": {
					"type": "integer",
					"required": false,
					"description": "From time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"application_module": {
					"type": "integer",
					"required": false,
					"description": "Application module",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single uncovered url."
		},
		"update": {
			"url": "/uncovered_urls/:id",
			"method": "PUT",
			"params": {
				"release": {
					"type": "integer",
					"required": false,
					"description": "Release",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"prod_provider": {
					"type": "integer",
					"required": false,
					"description": "Prod provider",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"dev_provider": {
					"type": "integer",
					"required": false,
					"description": "Dev provider",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"to_time": {
					"type": "integer",
					"required": false,
					"description": "To time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"from_time": {
					"type": "integer",
					"required": false,
					"description": "From time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"application_module": {
					"type": "integer",
					"required": false,
					"description": "Application module",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single uncovered url."
		},
		"delete": {
			"url": "/uncovered_urls/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single uncovered url."
		}
	},
	"test manuals": {
		"get-all": {
			"url": "/manual_tests",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test manuals list."
		},
		"get": {
			"url": "/manual_tests/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test manual."
		},
		"create": {
			"url": "/manual_tests",
			"method": "POST",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"covering_automated_test": {
					"type": "reference",
					"required": false,
					"description": "Covering automated test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"test_data_table": {
					"type": "reference",
					"required": false,
					"description": "Test data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_data_table"
							}
						]
					}
				}
			},
			"description": "Create a single test manual."
		},
		"update": {
			"url": "/manual_tests/:id",
			"method": "PUT",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"linked_tests2": {
					"type": "reference",
					"required": false,
					"description": "Linked tests2",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"linked_tests1": {
					"type": "reference",
					"required": false,
					"description": "Linked tests1",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_manual"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"covering_automated_test": {
					"type": "reference",
					"required": false,
					"description": "Covering automated test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"test_data_table": {
					"type": "reference",
					"required": false,
					"description": "Test data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_data_table"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test manual."
		},
		"delete": {
			"url": "/manual_tests/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test manual."
		}
	},
	"list nodes": {
		"get-all": {
			"url": "/list_nodes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets list nodes list."
		},
		"get": {
			"url": "/list_nodes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single list node."
		},
		"create": {
			"url": "/list_nodes",
			"method": "POST",
			"params": {
				"issue_severity": {
					"type": "reference",
					"required": false,
					"description": "Issue severity",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"security_tool_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Security tool tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "security_tool"
							}
						]
					}
				},
				"work_item_time_criticality": {
					"type": "reference",
					"required": false,
					"description": "Work item time criticality",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"used_by_rules_action": {
					"type": "reference",
					"required": false,
					"description": "Used by rules action",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"task_item_type": {
					"type": "reference",
					"required": false,
					"description": "Task item type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"pipeline_node_run_test_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"release_agile_type": {
					"type": "reference",
					"required": false,
					"description": "Release agile type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"run_native_status": {
					"type": "reference",
					"required": false,
					"description": "Run native status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"run_problem": {
					"type": "reference",
					"required": false,
					"description": "Run problem",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							}
						]
					}
				},
				"pipeline_node_run_test_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"run_history_run_status": {
					"type": "reference",
					"required": false,
					"description": "Run history run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"run_step_step_type": {
					"type": "reference",
					"required": false,
					"description": "Run step step type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"run_test_level": {
					"type": "reference",
					"required": false,
					"description": "Run test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"scm_commit_pattern_entity_type": {
					"type": "reference",
					"required": false,
					"description": "Scm commit pattern entity type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_commit_pattern"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"pipeline_node_test_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"field_metadata": {
					"type": "reference",
					"required": false,
					"description": "Field metadata",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "field_metadata_list"
							}
						]
					}
				},
				"pipeline_node_test_level": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"test_suite_link_to_test_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"work_item_epic_type": {
					"type": "reference",
					"required": false,
					"description": "Work item epic type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"index": {
					"type": "integer",
					"required": false,
					"description": "Index",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"work_item_defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Work item defect root level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"run_test_type": {
					"type": "reference",
					"required": false,
					"description": "Run test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"run_step_result": {
					"type": "reference",
					"required": false,
					"description": "Run step result",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"work_item_business_value": {
					"type": "reference",
					"required": false,
					"description": "Work item business value",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"work_item_rroe": {
					"type": "reference",
					"required": false,
					"description": "Work item rroe",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"test_automation_status": {
					"type": "reference",
					"required": false,
					"description": "Test automation status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							}
						]
					}
				},
				"run_history_problem": {
					"type": "reference",
					"required": false,
					"description": "Run history problem",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"list_nodes": {
					"type": "reference",
					"required": false,
					"description": "List items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"log_rule_build_classification": {
					"type": "reference",
					"required": false,
					"description": "Log rule build classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "log_rule"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 4000
				},
				"test_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Test testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"work_item_priority": {
					"type": "reference",
					"required": false,
					"description": "Work item priority",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"test_suite_link_to_test_test_type": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"pipeline_node_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"ci_build_build_fail_classification": {
					"type": "reference",
					"required": false,
					"description": "Ci build build fail classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"work_item_feature_type": {
					"type": "reference",
					"required": false,
					"description": "Work item feature type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"test_test_level": {
					"type": "reference",
					"required": false,
					"description": "Test test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"issue_state": {
					"type": "reference",
					"required": false,
					"description": "Issue state",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"issue_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Issue tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"pipeline_node_test_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"run_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Run testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"ci_build_predict_failure_class": {
					"type": "reference",
					"required": false,
					"description": "Ci build predict failure class",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"test_test_type": {
					"type": "reference",
					"required": false,
					"description": "Test test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"work_item_severity": {
					"type": "reference",
					"required": false,
					"description": "Work item severity",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"run_status": {
					"type": "reference",
					"required": false,
					"description": "Run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"pipeline_node_run_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"pipeline_node_run_test_level": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"test_suite_link_to_test_automation_status": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test automation status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"pipeline_run_status": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"run_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Run test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"work_item_quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Work item quality story type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"comment_visible_to": {
					"type": "reference",
					"required": false,
					"description": "Comment visible to",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"list_root": {
					"type": "reference",
					"required": false,
					"description": "List root",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"executor_framework": {
					"type": "reference",
					"required": false,
					"description": "Executor framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"run_history_run_native_status": {
					"type": "reference",
					"required": false,
					"description": "Run history run native status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node_classification": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"pipeline_governance_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline governance type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"work_item_item_origin": {
					"type": "reference",
					"required": false,
					"description": "Work item item origin",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"work_item_defect_type": {
					"type": "reference",
					"required": false,
					"description": "Work item defect type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				}
			},
			"description": "Create a single list node."
		},
		"update": {
			"url": "/list_nodes/:id",
			"method": "PUT",
			"params": {
				"issue_severity": {
					"type": "reference",
					"required": false,
					"description": "Issue severity",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"security_tool_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Security tool tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "security_tool"
							}
						]
					}
				},
				"work_item_time_criticality": {
					"type": "reference",
					"required": false,
					"description": "Work item time criticality",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"used_by_rules_action": {
					"type": "reference",
					"required": false,
					"description": "Used by rules action",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"task_item_type": {
					"type": "reference",
					"required": false,
					"description": "Task item type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"pipeline_node_run_test_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"release_agile_type": {
					"type": "reference",
					"required": false,
					"description": "Release agile type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"run_native_status": {
					"type": "reference",
					"required": false,
					"description": "Run native status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"run_problem": {
					"type": "reference",
					"required": false,
					"description": "Run problem",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							}
						]
					}
				},
				"pipeline_node_run_test_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"run_history_run_status": {
					"type": "reference",
					"required": false,
					"description": "Run history run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"run_step_step_type": {
					"type": "reference",
					"required": false,
					"description": "Run step step type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"run_test_level": {
					"type": "reference",
					"required": false,
					"description": "Run test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"scm_commit_pattern_entity_type": {
					"type": "reference",
					"required": false,
					"description": "Scm commit pattern entity type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_commit_pattern"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"pipeline_node_test_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"field_metadata": {
					"type": "reference",
					"required": false,
					"description": "Field metadata",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "field_metadata_list"
							}
						]
					}
				},
				"pipeline_node_test_level": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"test_suite_link_to_test_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"work_item_epic_type": {
					"type": "reference",
					"required": false,
					"description": "Work item epic type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"index": {
					"type": "integer",
					"required": false,
					"description": "Index",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"work_item_defect_root_level": {
					"type": "reference",
					"required": false,
					"description": "Work item defect root level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"run_test_type": {
					"type": "reference",
					"required": false,
					"description": "Run test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"run_step_result": {
					"type": "reference",
					"required": false,
					"description": "Run step result",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_step"
							}
						]
					}
				},
				"work_item_business_value": {
					"type": "reference",
					"required": false,
					"description": "Work item business value",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"work_item_rroe": {
					"type": "reference",
					"required": false,
					"description": "Work item rroe",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"test_automation_status": {
					"type": "reference",
					"required": false,
					"description": "Test automation status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							}
						]
					}
				},
				"run_history_problem": {
					"type": "reference",
					"required": false,
					"description": "Run history problem",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"log_rule_build_classification": {
					"type": "reference",
					"required": false,
					"description": "Log rule build classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "log_rule"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 4000
				},
				"test_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Test testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"work_item_priority": {
					"type": "reference",
					"required": false,
					"description": "Work item priority",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"test_suite_link_to_test_test_type": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"pipeline_node_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"ci_build_build_fail_classification": {
					"type": "reference",
					"required": false,
					"description": "Ci build build fail classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"work_item_feature_type": {
					"type": "reference",
					"required": false,
					"description": "Work item feature type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"test_test_level": {
					"type": "reference",
					"required": false,
					"description": "Test test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"issue_state": {
					"type": "reference",
					"required": false,
					"description": "Issue state",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"issue_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Issue tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "issue"
							}
						]
					}
				},
				"pipeline_node_test_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node test tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"run_testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Run testing tool type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"ci_build_predict_failure_class": {
					"type": "reference",
					"required": false,
					"description": "Ci build predict failure class",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"test_test_type": {
					"type": "reference",
					"required": false,
					"description": "Test test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"work_item_severity": {
					"type": "reference",
					"required": false,
					"description": "Work item severity",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"run_status": {
					"type": "reference",
					"required": false,
					"description": "Run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"pipeline_node_run_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"pipeline_node_run_test_level": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run test level",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"test_suite_link_to_test_automation_status": {
					"type": "reference",
					"required": false,
					"description": "Test suite link to test automation status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"pipeline_run_status": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"run_test_framework": {
					"type": "reference",
					"required": false,
					"description": "Run test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"work_item_quality_story_type": {
					"type": "reference",
					"required": false,
					"description": "Work item quality story type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "quality_story"
							}
						]
					}
				},
				"comment_visible_to": {
					"type": "reference",
					"required": false,
					"description": "Comment visible to",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"executor_framework": {
					"type": "reference",
					"required": false,
					"description": "Executor framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"run_history_run_native_status": {
					"type": "reference",
					"required": false,
					"description": "Run history run native status",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node_classification": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node classification",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"pipeline_governance_type": {
					"type": "reference",
					"required": false,
					"description": "Pipeline governance type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"work_item_item_origin": {
					"type": "reference",
					"required": false,
					"description": "Work item item origin",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"work_item_defect_type": {
					"type": "reference",
					"required": false,
					"description": "Work item defect type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_automated"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single list node."
		}
	},
	"metaphase wip limits": {
		"get-all": {
			"url": "/metaphase_wip_limits",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets metaphase wip limits list."
		},
		"get": {
			"url": "/metaphase_wip_limits/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single metaphase wip limit."
		},
		"create": {
			"url": "/metaphase_wip_limits",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"limit": {
					"type": "integer",
					"required": false,
					"description": "Limit",
					"min_value": 0,
					"max_value": 1000
				},
				"metaphase": {
					"type": "reference",
					"required": true,
					"description": "Metaphase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "metaphase"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": true,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				}
			},
			"description": "Create a single metaphase wip limit."
		},
		"update": {
			"url": "/metaphase_wip_limits/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"limit": {
					"type": "integer",
					"required": false,
					"description": "Limit",
					"min_value": 0,
					"max_value": 1000
				},
				"metaphase": {
					"type": "reference",
					"required": false,
					"description": "Metaphase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "metaphase"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single metaphase wip limit."
		},
		"delete": {
			"url": "/metaphase_wip_limits/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single metaphase wip limit."
		}
	},
	"requirement flows": {
		"get-all": {
			"url": "/requirement_flows",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement flows list."
		},
		"get": {
			"url": "/requirement_flows/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement flow."
		},
		"create": {
			"url": "/requirement_flows",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single requirement flow."
		},
		"update": {
			"url": "/requirement_flows/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single requirement flow."
		},
		"delete": {
			"url": "/requirement_flows/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement flow."
		}
	},
	"security tools": {
		"get-all": {
			"url": "/security_tools",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets security tools list."
		},
		"get": {
			"url": "/security_tools/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single security tool."
		},
		"create": {
			"url": "/security_tools",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"tool_type": {
					"type": "reference",
					"required": true,
					"description": "Tool",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.securityTool",
								"type": "list_node"
							}
						]
					}
				},
				"api_key": {
					"type": "string",
					"required": true,
					"description": "Api key",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"secret": {
					"type": "string",
					"required": true,
					"description": "Secret",
					"max_length": 255
				},
				"tool_url": {
					"type": "string",
					"required": true,
					"description": "Tool url",
					"max_length": 255
				}
			},
			"description": "Create a single security tool."
		},
		"update": {
			"url": "/security_tools/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"api_key": {
					"type": "string",
					"required": false,
					"description": "Api key",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"secret": {
					"type": "string",
					"required": false,
					"description": "Secret",
					"max_length": 255
				},
				"tool_url": {
					"type": "string",
					"required": false,
					"description": "Tool url",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single security tool."
		},
		"delete": {
			"url": "/security_tools/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single security tool."
		}
	},
	"comments": {
		"get-all": {
			"url": "/comments",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets comments list."
		},
		"get": {
			"url": "/comments/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single comment."
		},
		"create": {
			"url": "/comments",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"mention_user": {
					"type": "reference",
					"required": false,
					"description": "Mention user",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"owner_work_item": {
					"type": "reference",
					"required": false,
					"description": "Owner work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"owner_test": {
					"type": "reference",
					"required": false,
					"description": "Owner test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment_notification_item"
							}
						]
					}
				},
				"owner_run": {
					"type": "reference",
					"required": false,
					"description": "Owner run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"my_new_items_owner": {
					"type": "reference",
					"required": false,
					"description": "My new items owner",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"visible_to": {
					"type": "reference",
					"required": false,
					"description": "Visible to",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.visible_to_roles",
								"type": "list_node"
							}
						]
					}
				},
				"text": {
					"type": "memo",
					"required": false,
					"description": "Text"
				},
				"owner_requirement": {
					"type": "reference",
					"required": false,
					"description": "Owner requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				}
			},
			"description": "Create a single comment."
		},
		"update": {
			"url": "/comments/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"mention_user": {
					"type": "reference",
					"required": false,
					"description": "Mention user",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment_notification_item"
							}
						]
					}
				},
				"my_new_items_owner": {
					"type": "reference",
					"required": false,
					"description": "My new items owner",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"visible_to": {
					"type": "reference",
					"required": false,
					"description": "Visible to",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.visible_to_roles",
								"type": "list_node"
							}
						]
					}
				},
				"text": {
					"type": "memo",
					"required": false,
					"description": "Text"
				},
				"$id": null
			},
			"description": "Update a single comment."
		},
		"delete": {
			"url": "/comments/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single comment."
		}
	},
	"scm commits": {
		"get-all": {
			"url": "/scm_commits",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm commits list."
		},
		"get": {
			"url": "/scm_commits/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm commit."
		},
		"create": {
			"url": "/scm_commits",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"stories": {
					"type": "reference",
					"required": false,
					"description": "Stories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"changed_files": {
					"type": "reference",
					"required": false,
					"description": "Changed files",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_file_change"
							}
						]
					}
				},
				"commit_time": {
					"type": "date_time",
					"required": false,
					"description": "Commit time"
				},
				"ci_build": {
					"type": "reference",
					"required": false,
					"description": "Ci build",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"revision": {
					"type": "string",
					"required": true,
					"description": "Revision",
					"max_length": 255
				},
				"repositories": {
					"type": "reference",
					"required": false,
					"description": "Repositories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"workspace_user": {
					"type": "reference",
					"required": false,
					"description": "User",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"comment": {
					"type": "string",
					"required": false,
					"description": "Commit message",
					"max_length": 255
				},
				"user": {
					"type": "string",
					"required": false,
					"description": "SCM user",
					"max_length": 255
				},
				"email": {
					"type": "string",
					"required": false,
					"description": "Email",
					"max_length": 4000
				}
			},
			"description": "Create a single scm commit."
		},
		"update": {
			"url": "/scm_commits/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"stories": {
					"type": "reference",
					"required": false,
					"description": "Stories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"changed_files": {
					"type": "reference",
					"required": false,
					"description": "Changed files",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_file_change"
							}
						]
					}
				},
				"commit_time": {
					"type": "date_time",
					"required": false,
					"description": "Commit time"
				},
				"ci_build": {
					"type": "reference",
					"required": false,
					"description": "Ci build",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"revision": {
					"type": "string",
					"required": false,
					"description": "Revision",
					"max_length": 255
				},
				"repositories": {
					"type": "reference",
					"required": false,
					"description": "Repositories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"workspace_user": {
					"type": "reference",
					"required": false,
					"description": "User",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"comment": {
					"type": "string",
					"required": false,
					"description": "Commit message",
					"max_length": 255
				},
				"user": {
					"type": "string",
					"required": false,
					"description": "SCM user",
					"max_length": 255
				},
				"email": {
					"type": "string",
					"required": false,
					"description": "Email",
					"max_length": 4000
				},
				"$id": null
			},
			"description": "Update a single scm commit."
		},
		"delete": {
			"url": "/scm_commits/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm commit."
		}
	},
	"transitions": {
		"get-all": {
			"url": "/transitions",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets transitions list."
		},
		"get": {
			"url": "/transitions/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single transition."
		},
		"create": {
			"url": "/transitions",
			"method": "POST",
			"params": {
				"is_system": {
					"type": "boolean",
					"required": false,
					"description": "Is system"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_primary": {
					"type": "boolean",
					"required": false,
					"description": "Is primary"
				},
				"is_hidden": {
					"type": "boolean",
					"required": false,
					"description": "Is hidden"
				},
				"target_phase": {
					"type": "reference",
					"required": false,
					"description": "Target phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"source_phase": {
					"type": "reference",
					"required": false,
					"description": "Source phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"entity": {
					"type": "string",
					"required": false,
					"description": "Entity",
					"max_length": 255
				}
			},
			"description": "Create a single transition."
		},
		"update": {
			"url": "/transitions/:id",
			"method": "PUT",
			"params": {
				"is_system": {
					"type": "boolean",
					"required": false,
					"description": "Is system"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"is_primary": {
					"type": "boolean",
					"required": false,
					"description": "Is primary"
				},
				"is_hidden": {
					"type": "boolean",
					"required": false,
					"description": "Is hidden"
				},
				"target_phase": {
					"type": "reference",
					"required": false,
					"description": "Target phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"source_phase": {
					"type": "reference",
					"required": false,
					"description": "Source phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"entity": {
					"type": "string",
					"required": false,
					"description": "Entity",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single transition."
		},
		"delete": {
			"url": "/transitions/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single transition."
		}
	},
	"taxonomy nodes": {
		"get-all": {
			"url": "/taxonomy_nodes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets taxonomy nodes list."
		},
		"get": {
			"url": "/taxonomy_nodes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single taxonomy node."
		},
		"create": {
			"url": "/taxonomy_nodes",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run_of_default_taxonomy": {
					"type": "reference",
					"required": false,
					"description": "Run of default taxonomy",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"run_histories": {
					"type": "reference",
					"required": false,
					"description": "Run histories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"category": {
					"type": "reference",
					"required": false,
					"description": "Category",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "taxonomy_category_node"
							}
						]
					}
				},
				"items": {
					"type": "reference",
					"required": false,
					"description": "Items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				}
			},
			"description": "Create a single taxonomy node."
		},
		"update": {
			"url": "/taxonomy_nodes/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"run_of_default_taxonomy": {
					"type": "reference",
					"required": false,
					"description": "Run of default taxonomy",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"run_histories": {
					"type": "reference",
					"required": false,
					"description": "Run histories",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"category": {
					"type": "reference",
					"required": false,
					"description": "Category",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "taxonomy_category_node"
							}
						]
					}
				},
				"items": {
					"type": "reference",
					"required": false,
					"description": "Items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single taxonomy node."
		}
	},
	"ci jobs": {
		"get-all": {
			"url": "/ci_jobs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets ci jobs list."
		},
		"get": {
			"url": "/ci_jobs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single ci job."
		},
		"create": {
			"url": "/ci_jobs",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"ci_build": {
					"type": "reference",
					"required": false,
					"description": "Ci build",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"parameters": {
					"type": "object",
					"required": false,
					"description": "Parameters"
				}
			},
			"description": "Create a single ci job."
		},
		"update": {
			"url": "/ci_jobs/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"ci_build": {
					"type": "reference",
					"required": false,
					"description": "Ci build",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"pipeline_node": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"parameters": {
					"type": "object",
					"required": false,
					"description": "Parameters"
				},
				"$id": null
			},
			"description": "Update a single ci job."
		},
		"delete": {
			"url": "/ci_jobs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single ci job."
		}
	},
	"stories": {
		"get-all": {
			"url": "/stories",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets stories list."
		},
		"get": {
			"url": "/stories/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single story."
		},
		"create": {
			"url": "/stories",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"new_tasks": {
					"type": "object",
					"required": false,
					"description": "Tasks to generate"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Linked Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Story(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				}
			},
			"description": "Create a single story."
		},
		"update": {
			"url": "/stories/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Feature",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"sprint": {
					"type": "reference",
					"required": false,
					"description": "Sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "sprint"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"blocked": {
					"type": "boolean",
					"required": false,
					"description": "Blocked"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Linked Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Story(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"blocked_reason": {
					"type": "string",
					"required": false,
					"description": "Blocked reason",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single story."
		},
		"delete": {
			"url": "/stories/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single story."
		}
	},
	"user settings": {
		"get-all": {
			"url": "/user_settings",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets user settings list."
		},
		"get": {
			"url": "/user_settings/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single user setting."
		},
		"create": {
			"url": "/user_settings",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"scope_id": {
					"type": "string",
					"required": true,
					"description": "Scope id",
					"max_length": 255
				},
				"application_type": {
					"type": "string",
					"required": false,
					"description": "Application type",
					"max_length": 255
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"value": {
					"type": "object",
					"required": false,
					"description": "Value"
				},
				"scope_type": {
					"type": "string",
					"required": true,
					"description": "Scope type",
					"max_length": 255
				}
			},
			"description": "Create a single user setting."
		},
		"update": {
			"url": "/user_settings/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"scope_id": {
					"type": "string",
					"required": false,
					"description": "Scope id",
					"max_length": 255
				},
				"application_type": {
					"type": "string",
					"required": false,
					"description": "Application type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"value": {
					"type": "object",
					"required": false,
					"description": "Value"
				},
				"scope_type": {
					"type": "string",
					"required": false,
					"description": "Scope type",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single user setting."
		},
		"delete": {
			"url": "/user_settings/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single user setting."
		}
	},
	"log rules": {
		"get-all": {
			"url": "/log_rules",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets log rules list."
		},
		"get": {
			"url": "/log_rules/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single log rule."
		},
		"create": {
			"url": "/log_rules",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"build_classification": {
					"type": "reference",
					"required": false,
					"description": "Build classification",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"rule": {
					"type": "string",
					"required": true,
					"description": "Rule",
					"max_length": 255
				}
			},
			"description": "Create a single log rule."
		},
		"update": {
			"url": "/log_rules/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"build_classification": {
					"type": "reference",
					"required": false,
					"description": "Build classification",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.bfc",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"rule": {
					"type": "string",
					"required": false,
					"description": "Rule",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single log rule."
		},
		"delete": {
			"url": "/log_rules/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single log rule."
		}
	},
	"test suite link to tests": {
		"get-all": {
			"url": "/test_suite_link_to_tests",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets test suite link to tests list."
		},
		"get": {
			"url": "/test_suite_link_to_tests/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single test suite link to test."
		},
		"create": {
			"url": "/test_suite_link_to_tests",
			"method": "POST",
			"params": {
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"test_suite": {
					"type": "reference",
					"required": true,
					"description": "Test suite",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "test_suite"
							}
						]
					}
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"data_table": {
					"type": "reference",
					"required": false,
					"description": "Data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_file"
							}
						]
					}
				}
			},
			"description": "Create a single test suite link to test."
		},
		"update": {
			"url": "/test_suite_link_to_tests/:id",
			"method": "PUT",
			"params": {
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"data_table": {
					"type": "reference",
					"required": false,
					"description": "Data table",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single test suite link to test."
		},
		"delete": {
			"url": "/test_suite_link_to_tests/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single test suite link to test."
		}
	},
	"audit properties": {
		"get-all": {
			"url": "/audit_properties",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets audit properties list."
		},
		"get": {
			"url": "/audit_properties/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single audit property."
		}
	},
	"field metadata": {
		"get-all": {
			"url": "/metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata list."
		},
		"get": {
			"url": "/metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata."
		},
		"create": {
			"url": "/metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Type",
					"max_length": 255
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"list": {
					"type": "reference",
					"required": true,
					"description": "List",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				},
				"referenced_entity_name": {
					"type": "string",
					"required": false,
					"description": "Referenced entity name",
					"max_length": 255
				}
			},
			"description": "Create a single field metadata."
		},
		"update": {
			"url": "/metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Type",
					"max_length": 255
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata."
		}
	},
	"virtual team member team sprints": {
		"get-all": {
			"url": "/virtual_team_member_team_sprints",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets virtual team member team sprints list."
		},
		"get": {
			"url": "/virtual_team_member_team_sprints/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single virtual team member team sprint."
		},
		"create": {
			"url": "/virtual_team_member_team_sprints",
			"method": "POST",
			"params": {
				"release_id": {
					"type": "integer",
					"required": false,
					"description": "Release id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"done_story_points": {
					"type": "integer",
					"required": false,
					"description": "Done story points",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"member_email": {
					"type": "string",
					"required": false,
					"description": "Member email",
					"max_length": 255
				},
				"undone_urgent_defect_count": {
					"type": "integer",
					"required": false,
					"description": "Undone urgent defect count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"undone_very_high_defect_count": {
					"type": "integer",
					"required": false,
					"description": "Undone very high defect count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"team_id": {
					"type": "integer",
					"required": false,
					"description": "Team id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"member_name": {
					"type": "string",
					"required": false,
					"description": "Member name",
					"max_length": 255
				},
				"story_count": {
					"type": "integer",
					"required": false,
					"description": "Story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"capacity": {
					"type": "integer",
					"required": false,
					"description": "Capacity",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"remaining_time": {
					"type": "integer",
					"required": false,
					"description": "Remaining time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"user_id": {
					"type": "integer",
					"required": false,
					"description": "User id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"sprint_id": {
					"type": "integer",
					"required": false,
					"description": "Sprint id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"done_story_count": {
					"type": "integer",
					"required": false,
					"description": "Done story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"has_undone_defects": {
					"type": "boolean",
					"required": false,
					"description": "Has undone defects"
				},
				"in_progress_story_count": {
					"type": "integer",
					"required": false,
					"description": "In progress story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"invested_time": {
					"type": "integer",
					"required": false,
					"description": "Invested time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"estimated_time": {
					"type": "integer",
					"required": false,
					"description": "Estimated time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single virtual team member team sprint."
		},
		"update": {
			"url": "/virtual_team_member_team_sprints/:id",
			"method": "PUT",
			"params": {
				"release_id": {
					"type": "integer",
					"required": false,
					"description": "Release id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"done_story_points": {
					"type": "integer",
					"required": false,
					"description": "Done story points",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"member_email": {
					"type": "string",
					"required": false,
					"description": "Member email",
					"max_length": 255
				},
				"undone_urgent_defect_count": {
					"type": "integer",
					"required": false,
					"description": "Undone urgent defect count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"undone_very_high_defect_count": {
					"type": "integer",
					"required": false,
					"description": "Undone very high defect count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"team_id": {
					"type": "integer",
					"required": false,
					"description": "Team id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"member_name": {
					"type": "string",
					"required": false,
					"description": "Member name",
					"max_length": 255
				},
				"story_count": {
					"type": "integer",
					"required": false,
					"description": "Story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"capacity": {
					"type": "integer",
					"required": false,
					"description": "Capacity",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"remaining_time": {
					"type": "integer",
					"required": false,
					"description": "Remaining time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"user_id": {
					"type": "integer",
					"required": false,
					"description": "User id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"sprint_id": {
					"type": "integer",
					"required": false,
					"description": "Sprint id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"done_story_count": {
					"type": "integer",
					"required": false,
					"description": "Done story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"has_undone_defects": {
					"type": "boolean",
					"required": false,
					"description": "Has undone defects"
				},
				"in_progress_story_count": {
					"type": "integer",
					"required": false,
					"description": "In progress story count",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"invested_time": {
					"type": "integer",
					"required": false,
					"description": "Invested time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"estimated_time": {
					"type": "integer",
					"required": false,
					"description": "Estimated time",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single virtual team member team sprint."
		},
		"delete": {
			"url": "/virtual_team_member_team_sprints/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single virtual team member team sprint."
		}
	},
	"scm resource folders": {
		"get-all": {
			"url": "/scm_resource_folders",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm resource folders list."
		},
		"get": {
			"url": "/scm_resource_folders/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm resource folder."
		},
		"create": {
			"url": "/scm_resource_folders",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_folder"
							},
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single scm resource folder."
		},
		"update": {
			"url": "/scm_resource_folders/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "scm_resource_folder"
							},
							{
								"type": "scm_resource_file"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single scm resource folder."
		},
		"delete": {
			"url": "/scm_resource_folders/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm resource folder."
		}
	},
	"code bases": {
		"get-all": {
			"url": "/code_bases",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets code bases list."
		},
		"get": {
			"url": "/code_bases/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single code base."
		},
		"create": {
			"url": "/code_bases",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single code base."
		},
		"update": {
			"url": "/code_bases/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single code base."
		},
		"delete": {
			"url": "/code_bases/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single code base."
		}
	},
	"field metadata booleans": {
		"get-all": {
			"url": "/boolean_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata booleans list."
		},
		"get": {
			"url": "/boolean_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata boolean."
		},
		"create": {
			"url": "/boolean_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata boolean."
		},
		"update": {
			"url": "/boolean_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata boolean."
		}
	},
	"epics": {
		"get-all": {
			"url": "/epics",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets epics list."
		},
		"get": {
			"url": "/epics/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single epic."
		},
		"create": {
			"url": "/epics",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"epic_type": {
					"type": "reference",
					"required": false,
					"description": "Epic type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.epic_type",
								"type": "list_node"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Epic(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Epic(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single epic."
		},
		"update": {
			"url": "/epics/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "work_item_root"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"epic_type": {
					"type": "reference",
					"required": false,
					"description": "Epic type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.epic_type",
								"type": "list_node"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Epic(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Epic(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "epic"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single epic."
		},
		"delete": {
			"url": "/epics/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single epic."
		}
	},
	"audit relations": {
		"get-all": {
			"url": "/audit_relations",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets audit relations list."
		},
		"get": {
			"url": "/audit_relations/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single audit relation."
		}
	},
	"attachment notification items": {
		"get-all": {
			"url": "/attachment_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets attachment notification items list."
		},
		"get": {
			"url": "/attachment_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single attachment notification item."
		},
		"create": {
			"url": "/attachment_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single attachment notification item."
		},
		"update": {
			"url": "/attachment_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single attachment notification item."
		},
		"delete": {
			"url": "/attachment_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single attachment notification item."
		}
	},
	"issues": {
		"get-all": {
			"url": "/issues",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets issues list."
		},
		"get": {
			"url": "/issues/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single issue."
		},
		"create": {
			"url": "/issues",
			"method": "POST",
			"params": {
				"severity": {
					"type": "reference",
					"required": true,
					"description": "Severity",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.severity",
								"type": "list_node"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"tool_type": {
					"type": "reference",
					"required": true,
					"description": "Tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.securityTool",
								"type": "list_node"
							}
						]
					}
				},
				"bug_submitted": {
					"type": "boolean",
					"required": false,
					"description": "Bug submitted"
				},
				"assigned_user": {
					"type": "reference",
					"required": false,
					"description": "Assigned user",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"state": {
					"type": "reference",
					"required": true,
					"description": "State",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.issue_state_node",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single issue."
		},
		"update": {
			"url": "/issues/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"bug_submitted": {
					"type": "boolean",
					"required": false,
					"description": "Bug submitted"
				},
				"assigned_user": {
					"type": "reference",
					"required": false,
					"description": "Assigned user",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"state": {
					"type": "reference",
					"required": false,
					"description": "State",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.issue_state_node",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single issue."
		},
		"delete": {
			"url": "/issues/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single issue."
		}
	},
	"field metadata ref to teams": {
		"get-all": {
			"url": "/team_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata ref to teams list."
		},
		"get": {
			"url": "/team_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata ref to team."
		},
		"create": {
			"url": "/team_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				}
			},
			"description": "Create a single field metadata ref to team."
		},
		"update": {
			"url": "/team_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata ref to team."
		}
	},
	"runs": {
		"get-all": {
			"url": "/runs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets runs list."
		},
		"get": {
			"url": "/runs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run."
		},
		"create": {
			"url": "/runs",
			"method": "POST",
			"params": {
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Default run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"test": {
					"type": "reference",
					"required": true,
					"description": "Test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"default_taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Default environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"draft_run": {
					"type": "boolean",
					"required": false,
					"description": "Draft run"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 4000
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"duration": {
					"type": "integer",
					"required": false,
					"description": "Duration",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"full_error_details": {
					"type": "boolean",
					"required": false,
					"description": "Full error details"
				},
				"subtype": {
					"type": "string",
					"required": true,
					"description": "Subtype",
					"max_length": 255
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"build_and_test_job": {
					"type": "string",
					"required": false,
					"description": "Build",
					"max_length": 4000
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"ci_server_type": {
					"type": "string",
					"required": false,
					"description": "Ci server type",
					"max_length": 4000
				},
				"native_status": {
					"type": "reference",
					"required": true,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"previous_release": {
					"type": "reference",
					"required": false,
					"description": "Version from Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"parent_suite": {
					"type": "reference",
					"required": false,
					"description": "Suite run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single run."
		},
		"update": {
			"url": "/runs/:id",
			"method": "PUT",
			"params": {
				"default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Default run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"executor": {
					"type": "reference",
					"required": false,
					"description": "Executor",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "executor"
							}
						]
					}
				},
				"subtype_label": {
					"type": "string",
					"required": false,
					"description": "Subtype label",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"package": {
					"type": "string",
					"required": false,
					"description": "Package",
					"max_length": 255
				},
				"run_by": {
					"type": "reference",
					"required": false,
					"description": "Run by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"default_taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Default environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"taxonomies": {
					"type": "reference",
					"required": false,
					"description": "Environment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"url_to_ci": {
					"type": "string",
					"required": false,
					"description": "URL to CI",
					"max_length": 4000
				},
				"on_it": {
					"type": "reference",
					"required": false,
					"description": "Who's on it",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"duration": {
					"type": "integer",
					"required": false,
					"description": "Duration",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"full_error_details": {
					"type": "boolean",
					"required": false,
					"description": "Full error details"
				},
				"class_name": {
					"type": "string",
					"required": false,
					"description": "Class name",
					"max_length": 255
				},
				"build_and_test_job": {
					"type": "string",
					"required": false,
					"description": "Build",
					"max_length": 4000
				},
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"ci_server_type": {
					"type": "string",
					"required": false,
					"description": "Ci server type",
					"max_length": 4000
				},
				"native_status": {
					"type": "reference",
					"required": false,
					"description": "Native status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"last_modified_by": {
					"type": "reference",
					"required": false,
					"description": "Last modified by",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"pipeline": {
					"type": "reference",
					"required": false,
					"description": "Pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"component": {
					"type": "string",
					"required": false,
					"description": "Component",
					"max_length": 255
				},
				"build": {
					"type": "reference",
					"required": false,
					"description": "Build",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_build"
							}
						]
					}
				},
				"test_framework": {
					"type": "reference",
					"required": false,
					"description": "Test framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single run."
		},
		"delete": {
			"url": "/runs/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single run."
		}
	},
	"phase notification items": {
		"get-all": {
			"url": "/phase_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets phase notification items list."
		},
		"get": {
			"url": "/phase_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single phase notification item."
		},
		"create": {
			"url": "/phase_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single phase notification item."
		},
		"update": {
			"url": "/phase_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single phase notification item."
		},
		"delete": {
			"url": "/phase_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single phase notification item."
		}
	},
	"field metadata longs": {
		"get-all": {
			"url": "/integer_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata longs list."
		},
		"get": {
			"url": "/integer_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata long."
		},
		"create": {
			"url": "/integer_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata long."
		},
		"update": {
			"url": "/integer_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata long."
		}
	},
	"taxonomy category nodes": {
		"get-all": {
			"url": "/taxonomy_category_nodes",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets taxonomy category nodes list."
		},
		"get": {
			"url": "/taxonomy_category_nodes/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single taxonomy category node."
		},
		"create": {
			"url": "/taxonomy_category_nodes",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"items": {
					"type": "reference",
					"required": false,
					"description": "Items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				}
			},
			"description": "Create a single taxonomy category node."
		},
		"update": {
			"url": "/taxonomy_category_nodes/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"items": {
					"type": "reference",
					"required": false,
					"description": "Items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "taxonomy_item_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single taxonomy category node."
		}
	},
	"scm commit patterns": {
		"get-all": {
			"url": "/scm_commit_patterns",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm commit patterns list."
		},
		"get": {
			"url": "/scm_commit_patterns/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm commit pattern."
		},
		"create": {
			"url": "/scm_commit_patterns",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "reference",
					"required": false,
					"description": "Entity type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.scm_commit_pattern_entity_type",
								"type": "list_node"
							}
						]
					}
				},
				"pattern": {
					"type": "string",
					"required": true,
					"description": "Commit message pattern",
					"max_length": 255
				}
			},
			"description": "Create a single scm commit pattern."
		},
		"update": {
			"url": "/scm_commit_patterns/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "reference",
					"required": false,
					"description": "Entity type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.scm_commit_pattern_entity_type",
								"type": "list_node"
							}
						]
					}
				},
				"pattern": {
					"type": "string",
					"required": false,
					"description": "Commit message pattern",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single scm commit pattern."
		},
		"delete": {
			"url": "/scm_commit_patterns/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm commit pattern."
		}
	},
	"team member team sprints": {
		"get-all": {
			"url": "/team_member_team_sprints",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets team member team sprints list."
		},
		"get": {
			"url": "/team_member_team_sprints/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single team member team sprint."
		},
		"create": {
			"url": "/team_member_team_sprints",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"hours_per_day": {
					"type": "integer",
					"required": false,
					"description": "Hours per day",
					"min_value": 0,
					"max_value": 24
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"team_member": {
					"type": "reference",
					"required": true,
					"description": "Team member",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team_member"
							}
						]
					}
				},
				"team_sprint": {
					"type": "reference",
					"required": true,
					"description": "Team sprint",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team_sprint"
							}
						]
					}
				},
				"sprint_id": {
					"type": "integer",
					"required": false,
					"description": "Sprint id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"work_days": {
					"type": "integer",
					"required": false,
					"description": "Work days",
					"min_value": 0,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single team member team sprint."
		},
		"update": {
			"url": "/team_member_team_sprints/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"hours_per_day": {
					"type": "integer",
					"required": false,
					"description": "Hours per day",
					"min_value": 0,
					"max_value": 24
				},
				"sprint_id": {
					"type": "integer",
					"required": false,
					"description": "Sprint id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"work_days": {
					"type": "integer",
					"required": false,
					"description": "Work days",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single team member team sprint."
		},
		"delete": {
			"url": "/team_member_team_sprints/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single team member team sprint."
		}
	},
	"product areas": {
		"get-all": {
			"url": "/product_areas",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets product areas list."
		},
		"get": {
			"url": "/product_areas/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single product area."
		},
		"create": {
			"url": "/product_areas",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"pa_test_rule": {
					"type": "reference",
					"required": false,
					"description": "Pa test rule",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pa_test_rule"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"usage_configuration": {
					"type": "reference",
					"required": false,
					"description": "Usage configuration",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_configuration"
							}
						]
					}
				}
			},
			"description": "Create a single product area."
		},
		"update": {
			"url": "/product_areas/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"pa_test_rule": {
					"type": "reference",
					"required": false,
					"description": "Pa test rule",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pa_test_rule"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"usage_configuration": {
					"type": "reference",
					"required": false,
					"description": "Usage configuration",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_configuration"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single product area."
		},
		"delete": {
			"url": "/product_areas/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single product area."
		}
	},
	"entity deletion logs": {
		"get-all": {
			"url": "/entity_deletion_logs",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets entity deletion logs list."
		},
		"get": {
			"url": "/entity_deletion_logs/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single entity deletion log."
		}
	},
	"user tags": {
		"get-all": {
			"url": "/user_tags",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets user tags list."
		},
		"get": {
			"url": "/user_tags/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single user tag."
		},
		"create": {
			"url": "/user_tags",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"requirement": {
					"type": "reference",
					"required": false,
					"description": "Requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_root"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"pipeline_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single user tag."
		},
		"update": {
			"url": "/user_tags/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"requirement": {
					"type": "reference",
					"required": false,
					"description": "Requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_root"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"pipeline_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single user tag."
		},
		"delete": {
			"url": "/user_tags/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single user tag."
		}
	},
	"pipeline models": {
		"get-all": {
			"url": "/pipeline_models",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets pipeline models list."
		},
		"get": {
			"url": "/pipeline_models/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single pipeline model."
		}
	},
	"labels": {
		"get-all": {
			"url": "/labels",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets labels list."
		},
		"get": {
			"url": "/labels/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single label."
		},
		"create": {
			"url": "/labels",
			"method": "POST",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"entity_logical_name": {
					"type": "string",
					"required": true,
					"description": "Entity logical name",
					"max_length": 255
				},
				"language": {
					"type": "string",
					"required": true,
					"description": "Language",
					"max_length": 255
				},
				"value": {
					"type": "string",
					"required": false,
					"description": "Value",
					"max_length": 255
				}
			},
			"description": "Create a single label."
		},
		"update": {
			"url": "/labels/:id",
			"method": "PUT",
			"params": {
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"value": {
					"type": "string",
					"required": false,
					"description": "Value",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single label."
		},
		"delete": {
			"url": "/labels/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single label."
		}
	},
	"field metadata lists": {
		"get-all": {
			"url": "/list_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata lists list."
		},
		"get": {
			"url": "/list_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata list."
		},
		"create": {
			"url": "/list_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"list": {
					"type": "reference",
					"required": true,
					"description": "List",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "list_node"
							}
						]
					}
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"is_multivalue": {
					"type": "boolean",
					"required": false,
					"description": "Is multivalue"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 50
				}
			},
			"description": "Create a single field metadata list."
		},
		"update": {
			"url": "/list_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata list."
		}
	},
	"apppulse apps": {
		"get-all": {
			"url": "/apppulse_apps",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets apppulse apps list."
		},
		"get": {
			"url": "/apppulse_apps/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single apppulse app."
		},
		"create": {
			"url": "/apppulse_apps",
			"method": "POST",
			"params": {
				"tenant_id": {
					"type": "string",
					"required": true,
					"description": "Tenant id",
					"max_length": 255
				},
				"provider_type": {
					"type": "string",
					"required": true,
					"description": "Provider type",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"app_type": {
					"type": "string",
					"required": true,
					"description": "App type",
					"max_length": 255
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"provider_location": {
					"type": "string",
					"required": true,
					"description": "Provider location",
					"max_length": 255
				},
				"last_sync_date": {
					"type": "date_time",
					"required": false,
					"description": "Last sync date"
				},
				"usage_instance": {
					"type": "reference",
					"required": false,
					"description": "Usage instance",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_instance"
							}
						]
					}
				},
				"provider_user": {
					"type": "string",
					"required": true,
					"description": "Provider user",
					"max_length": 255
				},
				"app_name": {
					"type": "string",
					"required": true,
					"description": "App name",
					"max_length": 255
				},
				"app_ref_id": {
					"type": "string",
					"required": true,
					"description": "App ref id",
					"max_length": 255
				},
				"usage_configuration": {
					"type": "reference",
					"required": false,
					"description": "Usage configuration",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_configuration"
							}
						]
					}
				}
			},
			"description": "Create a single apppulse app."
		},
		"update": {
			"url": "/apppulse_apps/:id",
			"method": "PUT",
			"params": {
				"tenant_id": {
					"type": "string",
					"required": false,
					"description": "Tenant id",
					"max_length": 255
				},
				"provider_type": {
					"type": "string",
					"required": false,
					"description": "Provider type",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"app_type": {
					"type": "string",
					"required": false,
					"description": "App type",
					"max_length": 255
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"provider_location": {
					"type": "string",
					"required": false,
					"description": "Provider location",
					"max_length": 255
				},
				"last_sync_date": {
					"type": "date_time",
					"required": false,
					"description": "Last sync date"
				},
				"usage_instance": {
					"type": "reference",
					"required": false,
					"description": "Usage instance",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_instance"
							}
						]
					}
				},
				"provider_user": {
					"type": "string",
					"required": false,
					"description": "Provider user",
					"max_length": 255
				},
				"app_name": {
					"type": "string",
					"required": false,
					"description": "App name",
					"max_length": 255
				},
				"app_ref_id": {
					"type": "string",
					"required": false,
					"description": "App ref id",
					"max_length": 255
				},
				"usage_configuration": {
					"type": "reference",
					"required": false,
					"description": "Usage configuration",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_configuration"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single apppulse app."
		},
		"delete": {
			"url": "/apppulse_apps/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single apppulse app."
		}
	},
	"usage configurations": {
		"get-all": {
			"url": "/usage_configurations",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets usage configurations list."
		},
		"get": {
			"url": "/usage_configurations/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single usage configuration."
		},
		"create": {
			"url": "/usage_configurations",
			"method": "POST",
			"params": {
				"usage_provider": {
					"type": "reference",
					"required": false,
					"description": "Usage provider",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "apppulse_app"
							}
						]
					}
				},
				"usage_instance": {
					"type": "reference",
					"required": false,
					"description": "Usage instance",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_instance"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application Modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "Production App Transactions",
					"max_length": 255
				}
			},
			"description": "Create a single usage configuration."
		},
		"update": {
			"url": "/usage_configurations/:id",
			"method": "PUT",
			"params": {
				"usage_provider": {
					"type": "reference",
					"required": false,
					"description": "Usage provider",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "apppulse_app"
							}
						]
					}
				},
				"usage_instance": {
					"type": "reference",
					"required": false,
					"description": "Usage instance",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "usage_instance"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application Modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"url": {
					"type": "string",
					"required": false,
					"description": "Production App Transactions",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single usage configuration."
		},
		"delete": {
			"url": "/usage_configurations/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single usage configuration."
		}
	},
	"scm resource files": {
		"get-all": {
			"url": "/scm_resource_files",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets scm resource files list."
		},
		"get": {
			"url": "/scm_resource_files/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single scm resource file."
		},
		"create": {
			"url": "/scm_resource_files",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"link_to_test": {
					"type": "reference",
					"required": false,
					"description": "Link to test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"scm_repository": {
					"type": "reference",
					"required": true,
					"description": "Scm repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"relative_path": {
					"type": "string",
					"required": true,
					"description": "Relative path",
					"max_length": 260
				}
			},
			"description": "Create a single scm resource file."
		},
		"update": {
			"url": "/scm_resource_files/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_resource_folder"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"link_to_test": {
					"type": "reference",
					"required": false,
					"description": "Link to test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "test_suite_link_to_test"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"scm_repository": {
					"type": "reference",
					"required": false,
					"description": "Scm repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"relative_path": {
					"type": "string",
					"required": false,
					"description": "Relative path",
					"max_length": 260
				},
				"$id": null
			},
			"description": "Update a single scm resource file."
		},
		"delete": {
			"url": "/scm_resource_files/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single scm resource file."
		}
	},
	"run steps": {
		"get-all": {
			"url": "/run_steps",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets run steps list."
		},
		"get": {
			"url": "/run_steps/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single run step."
		},
		"update": {
			"url": "/run_steps/:id",
			"method": "PUT",
			"params": {
				"actual": {
					"type": "object",
					"required": false,
					"description": "Actual"
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"step_type": {
					"type": "reference",
					"required": false,
					"description": "Step type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.manual_test_run_step_type",
								"type": "list_node"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "run_manual"
							}
						]
					}
				},
				"result": {
					"type": "reference",
					"required": false,
					"description": "Result",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.run_native_status",
								"type": "list_node"
							}
						]
					}
				},
				"defect": {
					"type": "reference",
					"required": false,
					"description": "Defect",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "defect"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single run step."
		}
	},
	"features": {
		"get-all": {
			"url": "/features",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets features list."
		},
		"get": {
			"url": "/features/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single feature."
		},
		"create": {
			"url": "/features",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Epic",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"initial_estimate": {
					"type": "integer",
					"required": false,
					"description": "Initial estimate",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"requirement_feature": {
					"type": "reference",
					"required": false,
					"description": "Requirement feature",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"is_draft": {
					"type": "boolean",
					"required": false,
					"description": "Is draft"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Feature(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Feature(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"feature_type": {
					"type": "reference",
					"required": false,
					"description": "Feature type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.feature_type",
								"type": "list_node"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single feature."
		},
		"update": {
			"url": "/features/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Epic",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "epic"
							},
							{
								"type": "work_item_root"
							}
						]
					}
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"item_origin": {
					"type": "reference",
					"required": false,
					"description": "Item origin",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.item_origin",
								"type": "list_node"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"rank": {
					"type": "integer",
					"required": false,
					"description": "Rank",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"rroe": {
					"type": "reference",
					"required": false,
					"description": "WSJF time RR | OE",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"test": {
					"type": "reference",
					"required": false,
					"description": "Test",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_automated"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"priority": {
					"type": "reference",
					"required": false,
					"description": "Priority",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.priority",
								"type": "list_node"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"initial_estimate": {
					"type": "integer",
					"required": false,
					"description": "Initial estimate",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"phase_to_time_in_phase": {
					"type": "object",
					"required": false,
					"description": "Phase to time in phase"
				},
				"requirement_feature": {
					"type": "reference",
					"required": false,
					"description": "Requirement feature",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"requirements": {
					"type": "reference",
					"required": false,
					"description": "Requirements",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"story_points": {
					"type": "integer",
					"required": false,
					"description": "Story points",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_items2": {
					"type": "reference",
					"required": false,
					"description": "Feature(Trace from)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_items1": {
					"type": "reference",
					"required": false,
					"description": "Feature(Trace to)",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"team": {
					"type": "reference",
					"required": false,
					"description": "Team",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"feature_type": {
					"type": "reference",
					"required": false,
					"description": "Feature type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.feature_type",
								"type": "list_node"
							}
						]
					}
				},
				"time_criticality": {
					"type": "reference",
					"required": false,
					"description": "WSJF time criticality",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"job_size": {
					"type": "integer",
					"required": false,
					"description": "WSJF job size",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"business_value": {
					"type": "reference",
					"required": false,
					"description": "WSJF business value",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.wsjf_scale_type",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single feature."
		},
		"delete": {
			"url": "/features/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single feature."
		}
	},
	"templates": {
		"get-all": {
			"url": "/templates",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets templates list."
		},
		"get": {
			"url": "/templates/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single template."
		},
		"create": {
			"url": "/templates",
			"method": "POST",
			"params": {
				"for_entity_type": {
					"type": "string",
					"required": false,
					"description": "For entity type",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"last_share_action": {
					"type": "date_time",
					"required": false,
					"description": "Last share action"
				},
				"params": {
					"type": "object",
					"required": false,
					"description": "Params"
				},
				"is_default": {
					"type": "boolean",
					"required": false,
					"description": "Is default"
				},
				"is_shared": {
					"type": "boolean",
					"required": false,
					"description": "Is shared"
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single template."
		},
		"update": {
			"url": "/templates/:id",
			"method": "PUT",
			"params": {
				"for_entity_type": {
					"type": "string",
					"required": false,
					"description": "For entity type",
					"max_length": 255
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"last_share_action": {
					"type": "date_time",
					"required": false,
					"description": "Last share action"
				},
				"params": {
					"type": "object",
					"required": false,
					"description": "Params"
				},
				"is_default": {
					"type": "boolean",
					"required": false,
					"description": "Is default"
				},
				"is_shared": {
					"type": "boolean",
					"required": false,
					"description": "Is shared"
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single template."
		},
		"delete": {
			"url": "/templates/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single template."
		}
	},
	"requirement folders": {
		"get-all": {
			"url": "/requirement_folders",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement folders list."
		},
		"get": {
			"url": "/requirement_folders/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement folder."
		},
		"create": {
			"url": "/requirement_folders",
			"method": "POST",
			"params": {
				"parent": {
					"type": "reference",
					"required": true,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_root"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"priority_group_assets": {
					"type": "reference",
					"required": false,
					"description": "Priority group assets",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				}
			},
			"description": "Create a single requirement folder."
		},
		"update": {
			"url": "/requirement_folders/:id",
			"method": "PUT",
			"params": {
				"parent": {
					"type": "reference",
					"required": false,
					"description": "Parent",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_root"
							}
						]
					}
				},
				"ordering": {
					"type": "object",
					"required": false,
					"description": "Ordering"
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"priority_group_assets": {
					"type": "reference",
					"required": false,
					"description": "Priority group assets",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_priority_group"
							}
						]
					}
				},
				"children": {
					"type": "reference",
					"required": false,
					"description": "Children",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_folder"
							},
							{
								"type": "requirement_flow"
							}
						]
					}
				},
				"order": {
					"type": "integer",
					"required": false,
					"description": "Order",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"$id": null
			},
			"description": "Update a single requirement folder."
		},
		"delete": {
			"url": "/requirement_folders/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement folder."
		}
	},
	"requirement priority groups": {
		"get-all": {
			"url": "/requirement_priority_groups",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets requirement priority groups list."
		},
		"get": {
			"url": "/requirement_priority_groups/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single requirement priority group."
		},
		"create": {
			"url": "/requirement_priority_groups",
			"method": "POST",
			"params": {
				"requirement_features": {
					"type": "reference",
					"required": false,
					"description": "Requirement features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"color": {
					"type": "string",
					"required": false,
					"description": "Color",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"requirement_folder": {
					"type": "reference",
					"required": false,
					"description": "Requirement folder",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				}
			},
			"description": "Create a single requirement priority group."
		},
		"update": {
			"url": "/requirement_priority_groups/:id",
			"method": "PUT",
			"params": {
				"requirement_features": {
					"type": "reference",
					"required": false,
					"description": "Requirement features",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"color": {
					"type": "string",
					"required": false,
					"description": "Color",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"requirement_folder": {
					"type": "reference",
					"required": false,
					"description": "Requirement folder",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_folder"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single requirement priority group."
		},
		"delete": {
			"url": "/requirement_priority_groups/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single requirement priority group."
		}
	},
	"commit notification items": {
		"get-all": {
			"url": "/commit_notification_items",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets commit notification items list."
		},
		"get": {
			"url": "/commit_notification_items/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single commit notification item."
		},
		"create": {
			"url": "/commit_notification_items",
			"method": "POST",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				}
			},
			"description": "Create a single commit notification item."
		},
		"update": {
			"url": "/commit_notification_items/:id",
			"method": "PUT",
			"params": {
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"is_new": {
					"type": "boolean",
					"required": false,
					"description": "Is new"
				},
				"is_app_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is app notification"
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"is_email_notification": {
					"type": "boolean",
					"required": false,
					"description": "Is email notification"
				},
				"$id": null
			},
			"description": "Update a single commit notification item."
		},
		"delete": {
			"url": "/commit_notification_items/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single commit notification item."
		}
	},
	"notification settings": {
		"get-all": {
			"url": "/notification_settings",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets notification settings list."
		},
		"get": {
			"url": "/notification_settings/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single notification setting."
		},
		"create": {
			"url": "/notification_settings",
			"method": "POST",
			"params": {
				"commit_in_failed_run": {
					"type": "integer",
					"required": false,
					"description": "My commit in a failed pipeline run",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"in_app_notification": {
					"type": "integer",
					"required": false,
					"description": "Notification in My Work",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"new_comment": {
					"type": "integer",
					"required": false,
					"description": "New comment",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"phase_change": {
					"type": "integer",
					"required": false,
					"description": "Phase change",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"new_attachment": {
					"type": "integer",
					"required": false,
					"description": "New attachment",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"plan_change": {
					"type": "integer",
					"required": false,
					"description": "Change in plan",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"attribute_change": {
					"type": "integer",
					"required": false,
					"description": "Attribute change",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"negative": {
					"type": "integer",
					"required": false,
					"description": "Negative",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"ppr_failed": {
					"type": "integer",
					"required": false,
					"description": "Pipeline run failed",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"test_failed_in_run": {
					"type": "integer",
					"required": false,
					"description": "A test I own failed in the pipeline run",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"email_notification": {
					"type": "integer",
					"required": false,
					"description": "Notification by Email",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				}
			},
			"description": "Create a single notification setting."
		},
		"update": {
			"url": "/notification_settings/:id",
			"method": "PUT",
			"params": {
				"commit_in_failed_run": {
					"type": "integer",
					"required": false,
					"description": "My commit in a failed pipeline run",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_task": {
					"type": "reference",
					"required": false,
					"description": "Linked entity task",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"linked_entity_pipeline": {
					"type": "reference",
					"required": false,
					"description": "Linked entity pipeline",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "pipeline"
							}
						]
					}
				},
				"in_app_notification": {
					"type": "integer",
					"required": false,
					"description": "Notification in My Work",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"new_comment": {
					"type": "integer",
					"required": false,
					"description": "New comment",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"phase_change": {
					"type": "integer",
					"required": false,
					"description": "Phase change",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_requirement": {
					"type": "reference",
					"required": false,
					"description": "Linked entity requirement",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "requirement_document"
							}
						]
					}
				},
				"new_attachment": {
					"type": "integer",
					"required": false,
					"description": "New attachment",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"plan_change": {
					"type": "integer",
					"required": false,
					"description": "Change in plan",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_work_item": {
					"type": "reference",
					"required": false,
					"description": "Linked entity work item",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "quality_story"
							},
							{
								"type": "epic"
							},
							{
								"type": "feature"
							},
							{
								"type": "defect"
							}
						]
					}
				},
				"attribute_change": {
					"type": "integer",
					"required": false,
					"description": "Attribute change",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"linked_entity_test": {
					"type": "reference",
					"required": false,
					"description": "Linked entity test",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "gherkin_test"
							},
							{
								"type": "test_manual"
							},
							{
								"type": "test_suite"
							}
						]
					}
				},
				"negative": {
					"type": "integer",
					"required": false,
					"description": "Negative",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"ppr_failed": {
					"type": "integer",
					"required": false,
					"description": "Pipeline run failed",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"test_failed_in_run": {
					"type": "integer",
					"required": false,
					"description": "A test I own failed in the pipeline run",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"email_notification": {
					"type": "integer",
					"required": false,
					"description": "Notification by Email",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"$id": null
			},
			"description": "Update a single notification setting."
		},
		"delete": {
			"url": "/notification_settings/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single notification setting."
		}
	},
	"field metadata long strings": {
		"get-all": {
			"url": "/long_string_metadata_fields",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets field metadata long strings list."
		},
		"get": {
			"url": "/long_string_metadata_fields/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single field metadata long string."
		},
		"create": {
			"url": "/long_string_metadata_fields",
			"method": "POST",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": true,
					"description": "Label",
					"max_length": 50
				},
				"is_user_defined": {
					"type": "boolean",
					"required": false,
					"description": "Is user defined"
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"entity_type": {
					"type": "string",
					"required": true,
					"description": "Entity type",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 25
				}
			},
			"description": "Create a single field metadata long string."
		},
		"update": {
			"url": "/long_string_metadata_fields/:id",
			"method": "PUT",
			"params": {
				"relevant_rules": {
					"type": "reference",
					"required": false,
					"description": "Relevant rules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "business_rule"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"label": {
					"type": "string",
					"required": false,
					"description": "Label",
					"max_length": 50
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Activity level",
					"min_value": 0,
					"max_value": 2
				},
				"$id": null
			},
			"description": "Update a single field metadata long string."
		}
	},
	"gherkin tests": {
		"get-all": {
			"url": "/gherkin_tests",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets gherkin tests list."
		},
		"get": {
			"url": "/gherkin_tests/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single gherkin test."
		},
		"create": {
			"url": "/gherkin_tests",
			"method": "POST",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": true,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"author": {
					"type": "reference",
					"required": false,
					"description": "Author",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"attachments": {
					"type": "reference",
					"required": false,
					"description": "Attachments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "attachment"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				}
			},
			"description": "Create a single gherkin test."
		},
		"update": {
			"url": "/gherkin_tests/:id",
			"method": "PUT",
			"params": {
				"covered_content": {
					"type": "reference",
					"required": false,
					"description": "Covered backlog",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "story"
							},
							{
								"type": "feature"
							}
						]
					}
				},
				"notification_items": {
					"type": "reference",
					"required": false,
					"description": "Notification items",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "plan_notification_item"
							},
							{
								"type": "ppr_failed_notification_item"
							},
							{
								"type": "comment_notification_item"
							},
							{
								"type": "attr_notification_item"
							},
							{
								"type": "phase_notification_item"
							},
							{
								"type": "attachment_notification_item"
							},
							{
								"type": "commit_notification_item"
							},
							{
								"type": "failed_test_notification_item"
							}
						]
					}
				},
				"phase": {
					"type": "reference",
					"required": false,
					"description": "Phase",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "phase"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"product_areas": {
					"type": "reference",
					"required": false,
					"description": "Application modules",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "product_area"
							}
						]
					}
				},
				"estimated_duration": {
					"type": "integer",
					"required": false,
					"description": "Estimated duration (minutes)",
					"min_value": 1,
					"max_value": 7000
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"user_tags": {
					"type": "reference",
					"required": false,
					"description": "Tags",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_tag"
							}
						]
					}
				},
				"testing_tool_type": {
					"type": "reference",
					"required": false,
					"description": "Testing tool type",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.testing_tool_type",
								"type": "list_node"
							}
						]
					}
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"automation_status": {
					"type": "reference",
					"required": false,
					"description": "Automation status",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.automation_status",
								"type": "list_node"
							}
						]
					}
				},
				"notification_settings": {
					"type": "reference",
					"required": false,
					"description": "Notification settings",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "notification_setting"
							}
						]
					}
				},
				"description": {
					"type": "memo",
					"required": false,
					"description": "Description"
				},
				"owner": {
					"type": "reference",
					"required": false,
					"description": "Owner",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"designer": {
					"type": "reference",
					"required": false,
					"description": "Designer",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "workspace_user"
							}
						]
					}
				},
				"covered_requirement": {
					"type": "reference",
					"required": false,
					"description": "Covered requirement",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "requirement_flow_item"
							},
							{
								"type": "requirement_document"
							},
							{
								"type": "requirement_flow"
							},
							{
								"type": "requirement_flow_feature"
							}
						]
					}
				},
				"test_type": {
					"type": "reference",
					"required": false,
					"description": "Test type",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"logical_name": "list_node.test_type",
								"type": "list_node"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single gherkin test."
		},
		"delete": {
			"url": "/gherkin_tests/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single gherkin test."
		}
	},
	"executors": {
		"get-all": {
			"url": "/executors",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets executors list."
		},
		"get": {
			"url": "/executors/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single executor."
		},
		"create": {
			"url": "/executors",
			"method": "POST",
			"params": {
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"password": {
					"type": "string",
					"required": false,
					"description": "Password",
					"max_length": 4000
				},
				"framework": {
					"type": "reference",
					"required": true,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"job_name": {
					"type": "string",
					"required": false,
					"description": "Job name",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": true,
					"description": "Name",
					"max_length": 255
				},
				"ci_server": {
					"type": "reference",
					"required": false,
					"description": "CI server",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "ci_server"
							}
						]
					}
				},
				"scm_repository": {
					"type": "reference",
					"required": true,
					"description": "GIT Repository",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "scm_repository"
							}
						]
					}
				},
				"username": {
					"type": "string",
					"required": false,
					"description": "Username",
					"max_length": 4000
				}
			},
			"description": "Create a single executor."
		},
		"update": {
			"url": "/executors/:id",
			"method": "PUT",
			"params": {
				"execution": {
					"type": "reference",
					"required": false,
					"description": "Execution",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "execution"
							}
						]
					}
				},
				"client_lock_stamp": {
					"type": "integer",
					"required": false,
					"description": "Client lock stamp",
					"min_value": 0,
					"max_value": 9007199254740991
				},
				"release": {
					"type": "reference",
					"required": false,
					"description": "Release",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"type": "release"
							}
						]
					}
				},
				"run": {
					"type": "reference",
					"required": false,
					"description": "Run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"password": {
					"type": "string",
					"required": false,
					"description": "Password",
					"max_length": 4000
				},
				"framework": {
					"type": "reference",
					"required": false,
					"description": "Framework",
					"field_type_data": {
						"multiple": false,
						"targets": [
							{
								"logical_name": "list_node.je.framework",
								"type": "list_node"
							}
						]
					}
				},
				"job_name": {
					"type": "string",
					"required": false,
					"description": "Job name",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Name",
					"max_length": 255
				},
				"username": {
					"type": "string",
					"required": false,
					"description": "Username",
					"max_length": 4000
				},
				"$id": null
			},
			"description": "Update a single executor."
		},
		"delete": {
			"url": "/executors/:id",
			"method": "DELETE",
			"params": {
				"$id": null
			},
			"description": "Delete a single executor."
		}
	},
	"workspace users": {
		"get-all": {
			"url": "/workspace_users",
			"method": "GET",
			"params": {
				"$query": null,
				"$limit": null,
				"$offset": null,
				"$fields": null,
				"$order_by": null,
				"$text_search": null
			},
			"description": "Gets workspace users list."
		},
		"get": {
			"url": "/workspace_users/:id",
			"method": "GET",
			"params": {
				"$id": null,
				"$fields": null
			},
			"description": "Gets a single workspace user."
		},
		"create": {
			"url": "/workspace_users",
			"method": "POST",
			"params": {
				"phone2": {
					"type": "string",
					"required": false,
					"description": "Phone2",
					"max_length": 255
				},
				"phone3": {
					"type": "string",
					"required": false,
					"description": "Phone3",
					"max_length": 255
				},
				"language": {
					"type": "string",
					"required": false,
					"description": "Language",
					"max_length": 255
				},
				"my_new_items_comments": {
					"type": "reference",
					"required": false,
					"description": "My new items comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"phone1": {
					"type": "string",
					"required": true,
					"description": "Phone",
					"max_length": 255
				},
				"password": {
					"type": "string",
					"required": false,
					"description": "Password",
					"max_length": 4000
				},
				"disliked_clusters": {
					"type": "reference",
					"required": false,
					"description": "Disliked clusters",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"pinned_favorite": {
					"type": "reference",
					"required": false,
					"description": "Pinned favorite",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "favorite"
							}
						]
					}
				},
				"pipeline_node_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"full_name": {
					"type": "string",
					"required": false,
					"description": "Full name",
					"max_length": 255
				},
				"name": {
					"type": "string",
					"required": false,
					"description": "Login name",
					"max_length": 255
				},
				"owner_tasks": {
					"type": "reference",
					"required": false,
					"description": "Owner tasks",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"roles": {
					"type": "reference",
					"required": true,
					"description": "Roles",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_role"
							}
						]
					}
				},
				"mention_in_comment": {
					"type": "reference",
					"required": false,
					"description": "Mention in comment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"runs_of_default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Runs of default run by",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"liked_clusters": {
					"type": "reference",
					"required": false,
					"description": "Liked clusters",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"led_teams": {
					"type": "reference",
					"required": false,
					"description": "Led teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Status",
					"min_value": 0,
					"max_value": 2
				},
				"affected_test_runs": {
					"type": "reference",
					"required": false,
					"description": "Affected test runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"on_it_runs": {
					"type": "reference",
					"required": false,
					"description": "On it runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"first_name": {
					"type": "string",
					"required": true,
					"description": "First name",
					"max_length": 255
				},
				"email": {
					"type": "string",
					"required": true,
					"description": "Email",
					"max_length": 255
				},
				"ldap_server_id": {
					"type": "integer",
					"required": false,
					"description": "Ldap server id",
					"min_value": -9007199254740991,
					"max_value": 9007199254740991
				},
				"owned_test_runs": {
					"type": "reference",
					"required": false,
					"description": "Owned test runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"last_name": {
					"type": "string",
					"required": true,
					"description": "Last name",
					"max_length": 255
				},
				"pipeline_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"runs_last_modified": {
					"type": "reference",
					"required": false,
					"description": "Runs last modified",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"owned_runs": {
					"type": "reference",
					"required": false,
					"description": "Owned runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"ldap_dn": {
					"type": "string",
					"required": false,
					"description": "Ldap dn",
					"max_length": 4000
				},
				"pa_test_rule": {
					"type": "reference",
					"required": false,
					"description": "Pa test rule",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pa_test_rule"
							}
						]
					}
				}
			},
			"description": "Create a single workspace user."
		},
		"update": {
			"url": "/workspace_users/:id",
			"method": "PUT",
			"params": {
				"language": {
					"type": "string",
					"required": false,
					"description": "Language",
					"max_length": 255
				},
				"my_new_items_comments": {
					"type": "reference",
					"required": false,
					"description": "My new items comments",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"disliked_clusters": {
					"type": "reference",
					"required": false,
					"description": "Disliked clusters",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"teams": {
					"type": "reference",
					"required": false,
					"description": "Teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"pinned_favorite": {
					"type": "reference",
					"required": false,
					"description": "Pinned favorite",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "favorite"
							}
						]
					}
				},
				"pipeline_node_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline node run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_node_run"
							}
						]
					}
				},
				"user_item": {
					"type": "reference",
					"required": false,
					"description": "User item",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_item"
							}
						]
					}
				},
				"owner_tasks": {
					"type": "reference",
					"required": false,
					"description": "Owner tasks",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "task"
							}
						]
					}
				},
				"roles": {
					"type": "reference",
					"required": false,
					"description": "Roles",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "user_role"
							}
						]
					}
				},
				"mention_in_comment": {
					"type": "reference",
					"required": false,
					"description": "Mention in comment",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "comment"
							}
						]
					}
				},
				"runs_of_default_run_by": {
					"type": "reference",
					"required": false,
					"description": "Runs of default run by",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							}
						]
					}
				},
				"liked_clusters": {
					"type": "reference",
					"required": false,
					"description": "Liked clusters",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "cluster"
							}
						]
					}
				},
				"led_teams": {
					"type": "reference",
					"required": false,
					"description": "Led teams",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "team"
							}
						]
					}
				},
				"activity_level": {
					"type": "integer",
					"required": false,
					"description": "Status",
					"min_value": 0,
					"max_value": 2
				},
				"affected_test_runs": {
					"type": "reference",
					"required": false,
					"description": "Affected test runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"on_it_runs": {
					"type": "reference",
					"required": false,
					"description": "On it runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_automated"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"owned_test_runs": {
					"type": "reference",
					"required": false,
					"description": "Owned test runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pipeline_run": {
					"type": "reference",
					"required": false,
					"description": "Pipeline run",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pipeline_run"
							}
						]
					}
				},
				"runs_last_modified": {
					"type": "reference",
					"required": false,
					"description": "Runs last modified",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_suite"
							},
							{
								"type": "run_automated"
							},
							{
								"type": "run_manual"
							},
							{
								"type": "gherkin_automated_run"
							}
						]
					}
				},
				"owned_runs": {
					"type": "reference",
					"required": false,
					"description": "Owned runs",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "run_history"
							}
						]
					}
				},
				"pa_test_rule": {
					"type": "reference",
					"required": false,
					"description": "Pa test rule",
					"field_type_data": {
						"multiple": true,
						"targets": [
							{
								"type": "pa_test_rule"
							}
						]
					}
				},
				"$id": null
			},
			"description": "Update a single workspace user."
		}
	}
}